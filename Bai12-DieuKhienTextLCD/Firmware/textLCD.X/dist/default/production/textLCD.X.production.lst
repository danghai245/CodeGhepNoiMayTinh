

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Mon Feb 27 10:23:22 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31  0000                     
    32                           ; Version 1.41
    33                           ; Generated 25/01/2017 GMT
    34                           ; 
    35                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC18F4520 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     _TXREG	set	4013
    67  0000                     _RCREG	set	4014
    68  0000                     _RCSTA	set	4011
    69  0000                     _TXSTA	set	4012
    70  0000                     _RCSTAbits	set	4011
    71  0000                     _SPBRG	set	4015
    72  0000                     _TXSTAbits	set	4012
    73  0000                     _PIR1bits	set	3998
    74  0000                     _TRISDbits	set	3989
    75  0000                     _LATDbits	set	3980
    76                           
    77                           	psect	smallconst
    78  000600                     __psmallconst:
    79                           	opt stack 0
    80  000600  00                 	db	0
    81  000601                     STR_1:
    82  000601  58                 	db	88	;'X'
    83  000602  69                 	db	105	;'i'
    84  000603  6E                 	db	110	;'n'
    85  000604  20                 	db	32
    86  000605  63                 	db	99	;'c'
    87  000606  68                 	db	104	;'h'
    88  000607  61                 	db	97	;'a'
    89  000608  6F                 	db	111	;'o'
    90  000609  00                 	db	0
    91                           
    92                           ; #config settings
    93  00060A  00                 	db	0	; dummy byte at the end
    94  0000                     
    95                           	psect	cinit
    96  0008B8                     __pcinit:
    97                           	opt stack 0
    98  0008B8                     start_initialization:
    99                           	opt stack 0
   100  0008B8                     __initialization:
   101                           	opt stack 0
   102                           
   103                           ; Clear objects allocated to COMRAM (64 bytes)
   104  0008B8  EE00  F001         	lfsr	0,__pbssCOMRAM
   105  0008BC  0E40               	movlw	64
   106  0008BE                     clear_0:
   107  0008BE  6AEE               	clrf	postinc0,c
   108  0008C0  06E8               	decf	wreg,f,c
   109  0008C2  E1FD               	bnz	clear_0
   110  0008C4                     end_of_initialization:
   111                           	opt stack 0
   112  0008C4                     __end_of__initialization:
   113                           	opt stack 0
   114  0008C4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   115  0008C6  6EF8               	movwf	tblptru,c
   116  0008C8  0100               	movlb	0
   117  0008CA  EFE3  F003         	goto	_main	;jump to C main() function
   118                           tblptru	equ	0xFF8
   119                           postinc0	equ	0xFEE
   120                           wreg	equ	0xFE8
   121                           
   122                           	psect	bssCOMRAM
   123  000001                     __pbssCOMRAM:
   124                           	opt stack 0
   125  000001                     _buffer:
   126                           	opt stack 0
   127  000001                     	ds	64
   128                           tblptru	equ	0xFF8
   129                           postinc0	equ	0xFEE
   130                           wreg	equ	0xFE8
   131                           
   132                           	psect	cstackCOMRAM
   133  000041                     __pcstackCOMRAM:
   134                           	opt stack 0
   135  000041                     ??_lcd_nible:
   136  000041                     uartIntMode@rxMode:
   137                           	opt stack 0
   138  000041                     uartBaudrateMode@mode:
   139                           	opt stack 0
   140  000041                     uartSetBaudrate@spbrg:
   141                           	opt stack 0
   142  000041                     uartRxMode@mode:
   143                           	opt stack 0
   144  000041                     uartSyncMode@mode:
   145                           	opt stack 0
   146  000041                     uartBitMode@mode:
   147                           	opt stack 0
   148  000041                     uartSynchMode@mode:
   149                           	opt stack 0
   150  000041                     uartGets@buffer:
   151                           	opt stack 0
   152                           
   153                           ; 2 bytes @ 0x0
   154  000041                     	ds	1
   155  000042                     uartIntMode@txMode:
   156                           	opt stack 0
   157                           
   158                           ; 1 bytes @ 0x1
   159  000042                     	ds	1
   160  000043                     lcd_nible@nible:
   161                           	opt stack 0
   162  000043                     uartGets@len:
   163                           	opt stack 0
   164                           
   165                           ; 1 bytes @ 0x2
   166  000043                     	ds	1
   167  000044                     lcd_byte@byte:
   168                           	opt stack 0
   169  000044                     uartGets@data:
   170                           	opt stack 0
   171                           
   172                           ; 1 bytes @ 0x3
   173  000044                     	ds	1
   174  000045                     lcd_cmd@cmd:
   175                           	opt stack 0
   176  000045                     lcd_putc@chr:
   177                           	opt stack 0
   178  000045                     uartGets@i:
   179                           	opt stack 0
   180                           
   181                           ; 1 bytes @ 0x4
   182  000045                     	ds	1
   183  000046                     ??_lcd_init:
   184  000046                     lcd_gotoxy@row:
   185                           	opt stack 0
   186  000046                     lcd_puts@str:
   187                           	opt stack 0
   188                           
   189                           ; 2 bytes @ 0x5
   190  000046                     	ds	1
   191  000047                     lcd_gotoxy@col:
   192                           	opt stack 0
   193                           
   194                           ; 1 bytes @ 0x6
   195  000047                     	ds	1
   196  000048                     tblptru	equ	0xFF8
   197                           postinc0	equ	0xFEE
   198                           wreg	equ	0xFE8
   199                           
   200                           ; 1 bytes @ 0x7
   201 ;;
   202 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   203 ;;
   204 ;; *************** function _main *****************
   205 ;; Defined at:
   206 ;;		line 11 in file "main.c"
   207 ;; Parameters:    Size  Location     Type
   208 ;;		None
   209 ;; Auto vars:     Size  Location     Type
   210 ;;		None
   211 ;; Return value:  Size  Location     Type
   212 ;;                  1    wreg      void 
   213 ;; Registers used:
   214 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   215 ;; Tracked objects:
   216 ;;		On entry : 0/0
   217 ;;		On exit  : 0/0
   218 ;;		Unchanged: 0/0
   219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   220 ;;      Params:         0       0       0       0       0       0       0
   221 ;;      Locals:         0       0       0       0       0       0       0
   222 ;;      Temps:          0       0       0       0       0       0       0
   223 ;;      Totals:         0       0       0       0       0       0       0
   224 ;;Total ram usage:        0 bytes
   225 ;; Hardware stack levels required when called:    4
   226 ;; This function calls:
   227 ;;		_lcd_gotoxy
   228 ;;		_lcd_init
   229 ;;		_lcd_puts
   230 ;;		_uartGets
   231 ;;		_uartOpen
   232 ;; This function is called by:
   233 ;;		Startup code after reset
   234 ;; This function uses a non-reentrant model
   235 ;;
   236                           
   237                           	psect	text0
   238  0007C6                     __ptext0:
   239                           	opt stack 0
   240  0007C6                     _main:
   241                           	opt stack 27
   242                           
   243                           ;main.c: 13: lcd_init();
   244                           
   245                           ;incstack = 0
   246  0007C6  EC06  F003         	call	_lcd_init	;wreg free
   247                           
   248                           ;main.c: 14: uartOpen();
   249  0007CA  EC01  F004         	call	_uartOpen	;wreg free
   250                           
   251                           ;main.c: 16: lcd_puts("Xin chao");
   252  0007CE  0E01               	movlw	low STR_1
   253  0007D0  6E46               	movwf	lcd_puts@str,c
   254  0007D2  0E06               	movlw	high STR_1
   255  0007D4  6E47               	movwf	lcd_puts@str+1,c
   256  0007D6  EC99  F003         	call	_lcd_puts	;wreg free
   257  0007DA                     l981:
   258                           
   259                           ;main.c: 19: {
   260                           ;main.c: 20: uartGets(&buffer[0],16);
   261  0007DA  0E01               	movlw	low _buffer
   262  0007DC  6E41               	movwf	uartGets@buffer,c
   263  0007DE  0E00               	movlw	high _buffer
   264  0007E0  6E42               	movwf	uartGets@buffer+1,c
   265  0007E2  0E10               	movlw	16
   266  0007E4  6E43               	movwf	uartGets@len,c
   267  0007E6  EC1F  F004         	call	_uartGets	;wreg free
   268                           
   269                           ;main.c: 21: lcd_gotoxy(0,2);
   270  0007EA  0E02               	movlw	2
   271  0007EC  6E46               	movwf	lcd_gotoxy@row,c
   272  0007EE  0E00               	movlw	0
   273  0007F0  ECC2  F003         	call	_lcd_gotoxy
   274                           
   275                           ;main.c: 22: lcd_puts(&buffer[0]);
   276  0007F4  0E01               	movlw	low _buffer
   277  0007F6  6E46               	movwf	lcd_puts@str,c
   278  0007F8  0E00               	movlw	high _buffer
   279  0007FA  6E47               	movwf	lcd_puts@str+1,c
   280  0007FC  EC99  F003         	call	_lcd_puts	;wreg free
   281  000800  D7EC               	goto	l981
   282  000802                     __end_of_main:
   283                           	opt stack 0
   284                           tblptru	equ	0xFF8
   285                           postinc0	equ	0xFEE
   286                           wreg	equ	0xFE8
   287                           
   288 ;; *************** function _uartOpen *****************
   289 ;; Defined at:
   290 ;;		line 55 in file "myUart.c"
   291 ;; Parameters:    Size  Location     Type
   292 ;;		None
   293 ;; Auto vars:     Size  Location     Type
   294 ;;		None
   295 ;; Return value:  Size  Location     Type
   296 ;;                  1    wreg      void 
   297 ;; Registers used:
   298 ;;		wreg, status,2, cstack
   299 ;; Tracked objects:
   300 ;;		On entry : 0/0
   301 ;;		On exit  : 0/0
   302 ;;		Unchanged: 0/0
   303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   304 ;;      Params:         0       0       0       0       0       0       0
   305 ;;      Locals:         0       0       0       0       0       0       0
   306 ;;      Temps:          0       0       0       0       0       0       0
   307 ;;      Totals:         0       0       0       0       0       0       0
   308 ;;Total ram usage:        0 bytes
   309 ;; Hardware stack levels used:    1
   310 ;; Hardware stack levels required when called:    1
   311 ;; This function calls:
   312 ;;		_uartBaudrateMode
   313 ;;		_uartBitMode
   314 ;;		_uartIntMode
   315 ;;		_uartRxMode
   316 ;;		_uartSetBaudrate
   317 ;;		_uartStart
   318 ;;		_uartSyncMode
   319 ;;		_uartSynchMode
   320 ;; This function is called by:
   321 ;;		_main
   322 ;; This function uses a non-reentrant model
   323 ;;
   324                           
   325                           	psect	text1
   326  000802                     __ptext1:
   327                           	opt stack 0
   328  000802                     _uartOpen:
   329                           	opt stack 29
   330                           
   331                           ;myUart.c: 58: TXSTA = 0;
   332                           
   333                           ;incstack = 0
   334  000802  0E00               	movlw	0
   335  000804  6EAC               	movwf	4012,c	;volatile
   336                           
   337                           ;myUart.c: 59: RCSTA = 0;
   338  000806  0E00               	movlw	0
   339  000808  6EAB               	movwf	4011,c	;volatile
   340                           
   341                           ;myUart.c: 61: uartSyncMode(0);
   342  00080A  0E00               	movlw	0
   343  00080C  EC6E  F004         	call	_uartSyncMode
   344                           
   345                           ;myUart.c: 64: uartSynchMode(0);
   346  000810  0E00               	movlw	0
   347  000812  EC67  F004         	call	_uartSynchMode
   348                           
   349                           ;myUart.c: 66: uartBitMode(0);
   350  000816  0E00               	movlw	0
   351  000818  EC44  F004         	call	_uartBitMode
   352                           
   353                           ;myUart.c: 67: uartRxMode(1);
   354  00081C  0E01               	movlw	1
   355  00081E  EC75  F004         	call	_uartRxMode
   356                           
   357                           ;myUart.c: 68: uartBaudrateMode(0);
   358  000822  0E00               	movlw	0
   359  000824  EC7C  F004         	call	_uartBaudrateMode
   360                           
   361                           ;myUart.c: 69: uartIntMode(0, 1);
   362  000828  0E01               	movlw	1
   363  00082A  6E41               	movwf	uartIntMode@rxMode,c
   364  00082C  0E00               	movlw	0
   365  00082E  EC38  F004         	call	_uartIntMode
   366                           
   367                           ;myUart.c: 70: uartSetBaudrate(17);
   368  000832  0E11               	movlw	17
   369  000834  EC97  F004         	call	_uartSetBaudrate
   370                           
   371                           ;myUart.c: 71: uartStart();
   372  000838  EC9B  F004         	call	_uartStart	;wreg free
   373  00083C  0012               	return		;funcret
   374  00083E                     __end_of_uartOpen:
   375                           	opt stack 0
   376                           tblptru	equ	0xFF8
   377                           postinc0	equ	0xFEE
   378                           wreg	equ	0xFE8
   379                           
   380 ;; *************** function _uartSynchMode *****************
   381 ;; Defined at:
   382 ;;		line 38 in file "myUart.c"
   383 ;; Parameters:    Size  Location     Type
   384 ;;  mode            1    wreg     unsigned char 
   385 ;; Auto vars:     Size  Location     Type
   386 ;;  mode            1    0[COMRAM] unsigned char 
   387 ;; Return value:  Size  Location     Type
   388 ;;                  1    wreg      void 
   389 ;; Registers used:
   390 ;;		wreg
   391 ;; Tracked objects:
   392 ;;		On entry : 0/0
   393 ;;		On exit  : 0/0
   394 ;;		Unchanged: 0/0
   395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   396 ;;      Params:         0       0       0       0       0       0       0
   397 ;;      Locals:         1       0       0       0       0       0       0
   398 ;;      Temps:          0       0       0       0       0       0       0
   399 ;;      Totals:         1       0       0       0       0       0       0
   400 ;;Total ram usage:        1 bytes
   401 ;; Hardware stack levels used:    1
   402 ;; This function calls:
   403 ;;		Nothing
   404 ;; This function is called by:
   405 ;;		_uartOpen
   406 ;; This function uses a non-reentrant model
   407 ;;
   408                           
   409                           	psect	text2
   410  0008CE                     __ptext2:
   411                           	opt stack 0
   412  0008CE                     _uartSynchMode:
   413                           	opt stack 29
   414                           
   415                           ;incstack = 0
   416                           ;uartSynchMode@mode stored from wreg
   417  0008CE  6E41               	movwf	uartSynchMode@mode,c
   418                           
   419                           ;myUart.c: 40: TXSTAbits.CSRC = mode;
   420  0008D0  B041               	btfsc	uartSynchMode@mode,0,c
   421  0008D2  D002               	bra	u115
   422  0008D4  9EAC               	bcf	4012,7,c	;volatile
   423  0008D6  D001               	bra	u116
   424  0008D8                     u115:
   425  0008D8  8EAC               	bsf	4012,7,c	;volatile
   426  0008DA                     u116:
   427  0008DA  0012               	return		;funcret
   428  0008DC                     __end_of_uartSynchMode:
   429                           	opt stack 0
   430                           tblptru	equ	0xFF8
   431                           postinc0	equ	0xFEE
   432                           wreg	equ	0xFE8
   433                           
   434 ;; *************** function _uartSyncMode *****************
   435 ;; Defined at:
   436 ;;		line 27 in file "myUart.c"
   437 ;; Parameters:    Size  Location     Type
   438 ;;  mode            1    wreg     unsigned char 
   439 ;; Auto vars:     Size  Location     Type
   440 ;;  mode            1    0[COMRAM] unsigned char 
   441 ;; Return value:  Size  Location     Type
   442 ;;                  1    wreg      void 
   443 ;; Registers used:
   444 ;;		wreg
   445 ;; Tracked objects:
   446 ;;		On entry : 0/0
   447 ;;		On exit  : 0/0
   448 ;;		Unchanged: 0/0
   449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   450 ;;      Params:         0       0       0       0       0       0       0
   451 ;;      Locals:         1       0       0       0       0       0       0
   452 ;;      Temps:          0       0       0       0       0       0       0
   453 ;;      Totals:         1       0       0       0       0       0       0
   454 ;;Total ram usage:        1 bytes
   455 ;; Hardware stack levels used:    1
   456 ;; This function calls:
   457 ;;		Nothing
   458 ;; This function is called by:
   459 ;;		_uartOpen
   460 ;; This function uses a non-reentrant model
   461 ;;
   462                           
   463                           	psect	text3
   464  0008DC                     __ptext3:
   465                           	opt stack 0
   466  0008DC                     _uartSyncMode:
   467                           	opt stack 29
   468                           
   469                           ;incstack = 0
   470                           ;uartSyncMode@mode stored from wreg
   471  0008DC  6E41               	movwf	uartSyncMode@mode,c
   472                           
   473                           ;myUart.c: 29: TXSTAbits.SYNC = mode;
   474  0008DE  B041               	btfsc	uartSyncMode@mode,0,c
   475  0008E0  D002               	bra	u85
   476  0008E2  98AC               	bcf	4012,4,c	;volatile
   477  0008E4  D001               	bra	u86
   478  0008E6                     u85:
   479  0008E6  88AC               	bsf	4012,4,c	;volatile
   480  0008E8                     u86:
   481  0008E8  0012               	return		;funcret
   482  0008EA                     __end_of_uartSyncMode:
   483                           	opt stack 0
   484                           tblptru	equ	0xFF8
   485                           postinc0	equ	0xFEE
   486                           wreg	equ	0xFE8
   487                           
   488 ;; *************** function _uartStart *****************
   489 ;; Defined at:
   490 ;;		line 43 in file "myUart.c"
   491 ;; Parameters:    Size  Location     Type
   492 ;;		None
   493 ;; Auto vars:     Size  Location     Type
   494 ;;		None
   495 ;; Return value:  Size  Location     Type
   496 ;;                  1    wreg      void 
   497 ;; Registers used:
   498 ;;		None
   499 ;; Tracked objects:
   500 ;;		On entry : 0/0
   501 ;;		On exit  : 0/0
   502 ;;		Unchanged: 0/0
   503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   504 ;;      Params:         0       0       0       0       0       0       0
   505 ;;      Locals:         0       0       0       0       0       0       0
   506 ;;      Temps:          0       0       0       0       0       0       0
   507 ;;      Totals:         0       0       0       0       0       0       0
   508 ;;Total ram usage:        0 bytes
   509 ;; Hardware stack levels used:    1
   510 ;; This function calls:
   511 ;;		Nothing
   512 ;; This function is called by:
   513 ;;		_uartOpen
   514 ;; This function uses a non-reentrant model
   515 ;;
   516                           
   517                           	psect	text4
   518  000936                     __ptext4:
   519                           	opt stack 0
   520  000936                     _uartStart:
   521                           	opt stack 29
   522                           
   523                           ;myUart.c: 45: TXSTAbits.TXEN = 1;
   524                           
   525                           ;incstack = 0
   526  000936  8AAC               	bsf	4012,5,c	;volatile
   527                           
   528                           ;myUart.c: 46: RCSTAbits.SPEN = 1;
   529  000938  8EAB               	bsf	4011,7,c	;volatile
   530  00093A  0012               	return		;funcret
   531  00093C                     __end_of_uartStart:
   532                           	opt stack 0
   533                           tblptru	equ	0xFF8
   534                           postinc0	equ	0xFEE
   535                           wreg	equ	0xFE8
   536                           
   537 ;; *************** function _uartSetBaudrate *****************
   538 ;; Defined at:
   539 ;;		line 18 in file "myUart.c"
   540 ;; Parameters:    Size  Location     Type
   541 ;;  spbrg           1    wreg     unsigned char 
   542 ;; Auto vars:     Size  Location     Type
   543 ;;  spbrg           1    0[COMRAM] unsigned char 
   544 ;; Return value:  Size  Location     Type
   545 ;;                  1    wreg      void 
   546 ;; Registers used:
   547 ;;		wreg
   548 ;; Tracked objects:
   549 ;;		On entry : 0/0
   550 ;;		On exit  : 0/0
   551 ;;		Unchanged: 0/0
   552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   553 ;;      Params:         0       0       0       0       0       0       0
   554 ;;      Locals:         1       0       0       0       0       0       0
   555 ;;      Temps:          0       0       0       0       0       0       0
   556 ;;      Totals:         1       0       0       0       0       0       0
   557 ;;Total ram usage:        1 bytes
   558 ;; Hardware stack levels used:    1
   559 ;; This function calls:
   560 ;;		Nothing
   561 ;; This function is called by:
   562 ;;		_uartOpen
   563 ;; This function uses a non-reentrant model
   564 ;;
   565                           
   566                           	psect	text5
   567  00092E                     __ptext5:
   568                           	opt stack 0
   569  00092E                     _uartSetBaudrate:
   570                           	opt stack 29
   571                           
   572                           ;incstack = 0
   573                           ;uartSetBaudrate@spbrg stored from wreg
   574  00092E  6E41               	movwf	uartSetBaudrate@spbrg,c
   575                           
   576                           ;myUart.c: 20: SPBRG = spbrg;
   577  000930  C041  FFAF         	movff	uartSetBaudrate@spbrg,4015	;volatile
   578  000934  0012               	return		;funcret
   579  000936                     __end_of_uartSetBaudrate:
   580                           	opt stack 0
   581                           tblptru	equ	0xFF8
   582                           postinc0	equ	0xFEE
   583                           wreg	equ	0xFE8
   584                           
   585 ;; *************** function _uartRxMode *****************
   586 ;; Defined at:
   587 ;;		line 22 in file "myUart.c"
   588 ;; Parameters:    Size  Location     Type
   589 ;;  mode            1    wreg     unsigned char 
   590 ;; Auto vars:     Size  Location     Type
   591 ;;  mode            1    0[COMRAM] unsigned char 
   592 ;; Return value:  Size  Location     Type
   593 ;;                  1    wreg      void 
   594 ;; Registers used:
   595 ;;		wreg
   596 ;; Tracked objects:
   597 ;;		On entry : 0/0
   598 ;;		On exit  : 0/0
   599 ;;		Unchanged: 0/0
   600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   601 ;;      Params:         0       0       0       0       0       0       0
   602 ;;      Locals:         1       0       0       0       0       0       0
   603 ;;      Temps:          0       0       0       0       0       0       0
   604 ;;      Totals:         1       0       0       0       0       0       0
   605 ;;Total ram usage:        1 bytes
   606 ;; Hardware stack levels used:    1
   607 ;; This function calls:
   608 ;;		Nothing
   609 ;; This function is called by:
   610 ;;		_uartOpen
   611 ;; This function uses a non-reentrant model
   612 ;;
   613                           
   614                           	psect	text6
   615  0008EA                     __ptext6:
   616                           	opt stack 0
   617  0008EA                     _uartRxMode:
   618                           	opt stack 29
   619                           
   620                           ;incstack = 0
   621                           ;uartRxMode@mode stored from wreg
   622  0008EA  6E41               	movwf	uartRxMode@mode,c
   623                           
   624                           ;myUart.c: 24: RCSTAbits.CREN = mode;
   625  0008EC  B041               	btfsc	uartRxMode@mode,0,c
   626  0008EE  D002               	bra	u75
   627  0008F0  98AB               	bcf	4011,4,c	;volatile
   628  0008F2  D001               	bra	u76
   629  0008F4                     u75:
   630  0008F4  88AB               	bsf	4011,4,c	;volatile
   631  0008F6                     u76:
   632  0008F6  0012               	return		;funcret
   633  0008F8                     __end_of_uartRxMode:
   634                           	opt stack 0
   635                           tblptru	equ	0xFF8
   636                           postinc0	equ	0xFEE
   637                           wreg	equ	0xFE8
   638                           
   639 ;; *************** function _uartIntMode *****************
   640 ;; Defined at:
   641 ;;		line 7 in file "myUart.c"
   642 ;; Parameters:    Size  Location     Type
   643 ;;  txMode          1    wreg     unsigned char 
   644 ;;  rxMode          1    0[COMRAM] unsigned char 
   645 ;; Auto vars:     Size  Location     Type
   646 ;;  txMode          1    1[COMRAM] unsigned char 
   647 ;; Return value:  Size  Location     Type
   648 ;;                  1    wreg      void 
   649 ;; Registers used:
   650 ;;		wreg
   651 ;; Tracked objects:
   652 ;;		On entry : 0/0
   653 ;;		On exit  : 0/0
   654 ;;		Unchanged: 0/0
   655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   656 ;;      Params:         1       0       0       0       0       0       0
   657 ;;      Locals:         1       0       0       0       0       0       0
   658 ;;      Temps:          0       0       0       0       0       0       0
   659 ;;      Totals:         2       0       0       0       0       0       0
   660 ;;Total ram usage:        2 bytes
   661 ;; Hardware stack levels used:    1
   662 ;; This function calls:
   663 ;;		Nothing
   664 ;; This function is called by:
   665 ;;		_uartOpen
   666 ;; This function uses a non-reentrant model
   667 ;;
   668                           
   669                           	psect	text7
   670  000870                     __ptext7:
   671                           	opt stack 0
   672  000870                     _uartIntMode:
   673                           	opt stack 29
   674                           
   675                           ;incstack = 0
   676                           ;uartIntMode@txMode stored from wreg
   677  000870  6E42               	movwf	uartIntMode@txMode,c
   678                           
   679                           ;myUart.c: 9: PIR1bits.TXIF = txMode;
   680  000872  B042               	btfsc	uartIntMode@txMode,0,c
   681  000874  D002               	bra	u255
   682  000876  989E               	bcf	3998,4,c	;volatile
   683  000878  D001               	bra	u256
   684  00087A                     u255:
   685  00087A  889E               	bsf	3998,4,c	;volatile
   686  00087C                     u256:
   687                           
   688                           ;myUart.c: 10: PIR1bits.RCIF = rxMode;
   689  00087C  B041               	btfsc	uartIntMode@rxMode,0,c
   690  00087E  D002               	bra	u265
   691  000880  9A9E               	bcf	3998,5,c	;volatile
   692  000882  D001               	bra	u266
   693  000884                     u265:
   694  000884  8A9E               	bsf	3998,5,c	;volatile
   695  000886                     u266:
   696  000886  0012               	return		;funcret
   697  000888                     __end_of_uartIntMode:
   698                           	opt stack 0
   699                           tblptru	equ	0xFF8
   700                           postinc0	equ	0xFEE
   701                           wreg	equ	0xFE8
   702                           
   703 ;; *************** function _uartBitMode *****************
   704 ;; Defined at:
   705 ;;		line 32 in file "myUart.c"
   706 ;; Parameters:    Size  Location     Type
   707 ;;  mode            1    wreg     unsigned char 
   708 ;; Auto vars:     Size  Location     Type
   709 ;;  mode            1    0[COMRAM] unsigned char 
   710 ;; Return value:  Size  Location     Type
   711 ;;                  1    wreg      void 
   712 ;; Registers used:
   713 ;;		wreg
   714 ;; Tracked objects:
   715 ;;		On entry : 0/0
   716 ;;		On exit  : 0/0
   717 ;;		Unchanged: 0/0
   718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   719 ;;      Params:         0       0       0       0       0       0       0
   720 ;;      Locals:         1       0       0       0       0       0       0
   721 ;;      Temps:          0       0       0       0       0       0       0
   722 ;;      Totals:         1       0       0       0       0       0       0
   723 ;;Total ram usage:        1 bytes
   724 ;; Hardware stack levels used:    1
   725 ;; This function calls:
   726 ;;		Nothing
   727 ;; This function is called by:
   728 ;;		_uartOpen
   729 ;; This function uses a non-reentrant model
   730 ;;
   731                           
   732                           	psect	text8
   733  000888                     __ptext8:
   734                           	opt stack 0
   735  000888                     _uartBitMode:
   736                           	opt stack 29
   737                           
   738                           ;incstack = 0
   739                           ;uartBitMode@mode stored from wreg
   740  000888  6E41               	movwf	uartBitMode@mode,c
   741                           
   742                           ;myUart.c: 34: TXSTAbits.TX9 = mode;
   743  00088A  B041               	btfsc	uartBitMode@mode,0,c
   744  00088C  D002               	bra	u95
   745  00088E  9CAC               	bcf	4012,6,c	;volatile
   746  000890  D001               	bra	u96
   747  000892                     u95:
   748  000892  8CAC               	bsf	4012,6,c	;volatile
   749  000894                     u96:
   750                           
   751                           ;myUart.c: 35: RCSTAbits.RX9 = mode;
   752  000894  B041               	btfsc	uartBitMode@mode,0,c
   753  000896  D002               	bra	u105
   754  000898  9CAB               	bcf	4011,6,c	;volatile
   755  00089A  D001               	bra	u106
   756  00089C                     u105:
   757  00089C  8CAB               	bsf	4011,6,c	;volatile
   758  00089E                     u106:
   759  00089E  0012               	return		;funcret
   760  0008A0                     __end_of_uartBitMode:
   761                           	opt stack 0
   762                           tblptru	equ	0xFF8
   763                           postinc0	equ	0xFEE
   764                           wreg	equ	0xFE8
   765                           
   766 ;; *************** function _uartBaudrateMode *****************
   767 ;; Defined at:
   768 ;;		line 13 in file "myUart.c"
   769 ;; Parameters:    Size  Location     Type
   770 ;;  mode            1    wreg     unsigned char 
   771 ;; Auto vars:     Size  Location     Type
   772 ;;  mode            1    0[COMRAM] unsigned char 
   773 ;; Return value:  Size  Location     Type
   774 ;;                  1    wreg      void 
   775 ;; Registers used:
   776 ;;		wreg
   777 ;; Tracked objects:
   778 ;;		On entry : 0/0
   779 ;;		On exit  : 0/0
   780 ;;		Unchanged: 0/0
   781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   782 ;;      Params:         0       0       0       0       0       0       0
   783 ;;      Locals:         1       0       0       0       0       0       0
   784 ;;      Temps:          0       0       0       0       0       0       0
   785 ;;      Totals:         1       0       0       0       0       0       0
   786 ;;Total ram usage:        1 bytes
   787 ;; Hardware stack levels used:    1
   788 ;; This function calls:
   789 ;;		Nothing
   790 ;; This function is called by:
   791 ;;		_uartOpen
   792 ;; This function uses a non-reentrant model
   793 ;;
   794                           
   795                           	psect	text9
   796  0008F8                     __ptext9:
   797                           	opt stack 0
   798  0008F8                     _uartBaudrateMode:
   799                           	opt stack 29
   800                           
   801                           ;incstack = 0
   802                           ;uartBaudrateMode@mode stored from wreg
   803  0008F8  6E41               	movwf	uartBaudrateMode@mode,c
   804                           
   805                           ;myUart.c: 15: TXSTAbits.BRGH = mode;
   806  0008FA  B041               	btfsc	uartBaudrateMode@mode,0,c
   807  0008FC  D002               	bra	u65
   808  0008FE  94AC               	bcf	4012,2,c	;volatile
   809  000900  D001               	bra	u66
   810  000902                     u65:
   811  000902  84AC               	bsf	4012,2,c	;volatile
   812  000904                     u66:
   813  000904  0012               	return		;funcret
   814  000906                     __end_of_uartBaudrateMode:
   815                           	opt stack 0
   816                           tblptru	equ	0xFF8
   817                           postinc0	equ	0xFEE
   818                           wreg	equ	0xFE8
   819                           
   820 ;; *************** function _uartGets *****************
   821 ;; Defined at:
   822 ;;		line 83 in file "myUart.c"
   823 ;; Parameters:    Size  Location     Type
   824 ;;  buffer          2    0[COMRAM] PTR unsigned char 
   825 ;;		 -> buffer(64), 
   826 ;;  len             1    2[COMRAM] unsigned char 
   827 ;; Auto vars:     Size  Location     Type
   828 ;;  i               1    4[COMRAM] unsigned char 
   829 ;;  data            1    3[COMRAM] unsigned char 
   830 ;; Return value:  Size  Location     Type
   831 ;;                  1    wreg      void 
   832 ;; Registers used:
   833 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   834 ;; Tracked objects:
   835 ;;		On entry : 0/0
   836 ;;		On exit  : 0/0
   837 ;;		Unchanged: 0/0
   838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   839 ;;      Params:         3       0       0       0       0       0       0
   840 ;;      Locals:         2       0       0       0       0       0       0
   841 ;;      Temps:          0       0       0       0       0       0       0
   842 ;;      Totals:         5       0       0       0       0       0       0
   843 ;;Total ram usage:        5 bytes
   844 ;; Hardware stack levels used:    1
   845 ;; Hardware stack levels required when called:    1
   846 ;; This function calls:
   847 ;;		_uartDataRdy
   848 ;;		_uartRead
   849 ;; This function is called by:
   850 ;;		_main
   851 ;; This function uses a non-reentrant model
   852 ;;
   853                           
   854                           	psect	text10
   855  00083E                     __ptext10:
   856                           	opt stack 0
   857  00083E                     _uartGets:
   858                           	opt stack 29
   859                           
   860                           ;myUart.c: 85: char i;
   861                           ;myUart.c: 86: unsigned char data;
   862                           ;myUart.c: 88: for(i=0;i<len;i++)
   863                           
   864                           ;incstack = 0
   865  00083E  0E00               	movlw	0
   866  000840  6E45               	movwf	uartGets@i,c
   867  000842  D011               	goto	l957
   868  000844                     l947:
   869  000844  EC91  F004         	call	_uartDataRdy	;wreg free
   870  000848  0900               	iorlw	0
   871  00084A  B4D8               	btfsc	status,2,c
   872  00084C  D7FB               	goto	l947
   873                           
   874                           ;myUart.c: 91: data = uartRead();
   875  00084E  EC9E  F004         	call	_uartRead	;wreg free
   876  000852  6E44               	movwf	uartGets@data,c
   877                           
   878                           ;myUart.c: 92: *buffer = data;
   879  000854  C041  FFD9         	movff	uartGets@buffer,fsr2l
   880  000858  C042  FFDA         	movff	uartGets@buffer+1,fsr2h
   881  00085C  C044  FFDF         	movff	uartGets@data,indf2
   882                           
   883                           ;myUart.c: 93: buffer++;
   884  000860  4A41               	infsnz	uartGets@buffer,f,c
   885  000862  2A42               	incf	uartGets@buffer+1,f,c
   886  000864  2A45               	incf	uartGets@i,f,c
   887  000866                     l957:
   888  000866  5043               	movf	uartGets@len,w,c
   889  000868  5C45               	subwf	uartGets@i,w,c
   890  00086A  B0D8               	btfsc	status,0,c
   891  00086C  0012               	return	
   892  00086E  D7EA               	goto	l947
   893  000870                     __end_of_uartGets:
   894                           	opt stack 0
   895                           tblptru	equ	0xFF8
   896                           postinc0	equ	0xFEE
   897                           wreg	equ	0xFE8
   898                           indf2	equ	0xFDF
   899                           fsr2h	equ	0xFDA
   900                           fsr2l	equ	0xFD9
   901                           status	equ	0xFD8
   902                           
   903 ;; *************** function _uartRead *****************
   904 ;; Defined at:
   905 ;;		line 74 in file "myUart.c"
   906 ;; Parameters:    Size  Location     Type
   907 ;;		None
   908 ;; Auto vars:     Size  Location     Type
   909 ;;		None
   910 ;; Return value:  Size  Location     Type
   911 ;;                  1    wreg      unsigned char 
   912 ;; Registers used:
   913 ;;		wreg, status,2
   914 ;; Tracked objects:
   915 ;;		On entry : 0/0
   916 ;;		On exit  : 0/0
   917 ;;		Unchanged: 0/0
   918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   919 ;;      Params:         0       0       0       0       0       0       0
   920 ;;      Locals:         0       0       0       0       0       0       0
   921 ;;      Temps:          0       0       0       0       0       0       0
   922 ;;      Totals:         0       0       0       0       0       0       0
   923 ;;Total ram usage:        0 bytes
   924 ;; Hardware stack levels used:    1
   925 ;; This function calls:
   926 ;;		Nothing
   927 ;; This function is called by:
   928 ;;		_uartGets
   929 ;; This function uses a non-reentrant model
   930 ;;
   931                           
   932                           	psect	text11
   933  00093C                     __ptext11:
   934                           	opt stack 0
   935  00093C                     _uartRead:
   936                           	opt stack 29
   937                           
   938                           ;myUart.c: 76: return RCREG;
   939                           
   940                           ;incstack = 0
   941  00093C  50AE               	movf	4014,w,c	;volatile
   942  00093E  0012               	return	
   943  000940                     __end_of_uartRead:
   944                           	opt stack 0
   945                           tblptru	equ	0xFF8
   946                           postinc0	equ	0xFEE
   947                           wreg	equ	0xFE8
   948                           indf2	equ	0xFDF
   949                           fsr2h	equ	0xFDA
   950                           fsr2l	equ	0xFD9
   951                           status	equ	0xFD8
   952                           
   953 ;; *************** function _uartDataRdy *****************
   954 ;; Defined at:
   955 ;;		line 108 in file "myUart.c"
   956 ;; Parameters:    Size  Location     Type
   957 ;;		None
   958 ;; Auto vars:     Size  Location     Type
   959 ;;		None
   960 ;; Return value:  Size  Location     Type
   961 ;;                  1    wreg      unsigned char 
   962 ;; Registers used:
   963 ;;		wreg
   964 ;; Tracked objects:
   965 ;;		On entry : 0/0
   966 ;;		On exit  : 0/0
   967 ;;		Unchanged: 0/0
   968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   969 ;;      Params:         0       0       0       0       0       0       0
   970 ;;      Locals:         0       0       0       0       0       0       0
   971 ;;      Temps:          0       0       0       0       0       0       0
   972 ;;      Totals:         0       0       0       0       0       0       0
   973 ;;Total ram usage:        0 bytes
   974 ;; Hardware stack levels used:    1
   975 ;; This function calls:
   976 ;;		Nothing
   977 ;; This function is called by:
   978 ;;		_uartGets
   979 ;; This function uses a non-reentrant model
   980 ;;
   981                           
   982                           	psect	text12
   983  000922                     __ptext12:
   984                           	opt stack 0
   985  000922                     _uartDataRdy:
   986                           	opt stack 29
   987                           
   988                           ;myUart.c: 110: if(PIR1bits.RCIF)
   989                           
   990                           ;incstack = 0
   991  000922  AA9E               	btfss	3998,5,c	;volatile
   992  000924  D002               	goto	l801
   993                           
   994                           ;myUart.c: 111: return 1;
   995  000926  0E01               	movlw	1
   996  000928  0012               	return	
   997  00092A                     l801:
   998                           
   999                           ;myUart.c: 112: else
  1000                           ;myUart.c: 113: return 0;
  1001  00092A  0E00               	movlw	0
  1002  00092C  0012               	return	
  1003  00092E                     __end_of_uartDataRdy:
  1004                           	opt stack 0
  1005                           tblptru	equ	0xFF8
  1006                           postinc0	equ	0xFEE
  1007                           wreg	equ	0xFE8
  1008                           indf2	equ	0xFDF
  1009                           fsr2h	equ	0xFDA
  1010                           fsr2l	equ	0xFD9
  1011                           status	equ	0xFD8
  1012                           
  1013 ;; *************** function _lcd_puts *****************
  1014 ;; Defined at:
  1015 ;;		line 44 in file "myLCD.c"
  1016 ;; Parameters:    Size  Location     Type
  1017 ;;  str             2    5[COMRAM] PTR unsigned char 
  1018 ;;		 -> buffer(64), STR_1(9), 
  1019 ;; Auto vars:     Size  Location     Type
  1020 ;;		None
  1021 ;; Return value:  Size  Location     Type
  1022 ;;                  1    wreg      void 
  1023 ;; Registers used:
  1024 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1025 ;; Tracked objects:
  1026 ;;		On entry : 0/0
  1027 ;;		On exit  : 0/0
  1028 ;;		Unchanged: 0/0
  1029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1030 ;;      Params:         2       0       0       0       0       0       0
  1031 ;;      Locals:         0       0       0       0       0       0       0
  1032 ;;      Temps:          0       0       0       0       0       0       0
  1033 ;;      Totals:         2       0       0       0       0       0       0
  1034 ;;Total ram usage:        2 bytes
  1035 ;; Hardware stack levels used:    1
  1036 ;; Hardware stack levels required when called:    3
  1037 ;; This function calls:
  1038 ;;		_lcd_putc
  1039 ;; This function is called by:
  1040 ;;		_main
  1041 ;; This function uses a non-reentrant model
  1042 ;;
  1043                           
  1044                           	psect	text13
  1045  000732                     __ptext13:
  1046                           	opt stack 0
  1047  000732                     _lcd_puts:
  1048                           	opt stack 27
  1049                           
  1050                           ;myLCD.c: 46: while(*str)
  1051                           
  1052                           ;incstack = 0
  1053  000732  D014               	goto	l943
  1054  000734                     l939:
  1055                           
  1056                           ;myLCD.c: 47: {
  1057                           ;myLCD.c: 48: lcd_putc(*str);
  1058  000734  C046  FFF6         	movff	lcd_puts@str,tblptrl
  1059  000738  C047  FFF7         	movff	lcd_puts@str+1,tblptrh
  1060  00073C  6AF8               	clrf	tblptru,c
  1061  00073E  0E05               	movlw	(high __ramtop+-1)
  1062  000740  64F7               	cpfsgt	tblptrh,c
  1063  000742  D003               	bra	u277
  1064  000744  0008               	tblrd		*
  1065  000746  50F5               	movf	tablat,w,c
  1066  000748  D005               	bra	u270
  1067  00074A                     u277:
  1068  00074A  CFF6 FFE9          	movff	tblptrl,fsr0l
  1069  00074E  CFF7 FFEA          	movff	tblptrh,fsr0h
  1070  000752  50EF               	movf	indf0,w,c
  1071  000754                     u270:
  1072  000754  EC83  F004         	call	_lcd_putc
  1073                           
  1074                           ;myLCD.c: 49: str++;
  1075  000758  4A46               	infsnz	lcd_puts@str,f,c
  1076  00075A  2A47               	incf	lcd_puts@str+1,f,c
  1077  00075C                     l943:
  1078  00075C  C046  FFF6         	movff	lcd_puts@str,tblptrl
  1079  000760  C047  FFF7         	movff	lcd_puts@str+1,tblptrh
  1080  000764  6AF8               	clrf	tblptru,c
  1081  000766  0E05               	movlw	(high __ramtop+-1)
  1082  000768  64F7               	cpfsgt	tblptrh,c
  1083  00076A  D003               	bra	u287
  1084  00076C  0008               	tblrd		*
  1085  00076E  50F5               	movf	tablat,w,c
  1086  000770  D005               	bra	u280
  1087  000772                     u287:
  1088  000772  CFF6 FFE9          	movff	tblptrl,fsr0l
  1089  000776  CFF7 FFEA          	movff	tblptrh,fsr0h
  1090  00077A  50EF               	movf	indf0,w,c
  1091  00077C                     u280:
  1092  00077C  0900               	iorlw	0
  1093  00077E  B4D8               	btfsc	status,2,c
  1094  000780  0012               	return	
  1095  000782  D7D8               	goto	l939
  1096  000784                     __end_of_lcd_puts:
  1097                           	opt stack 0
  1098                           tblptru	equ	0xFF8
  1099                           tblptrh	equ	0xFF7
  1100                           tblptrl	equ	0xFF6
  1101                           tablat	equ	0xFF5
  1102                           indf0	equ	0xFEF
  1103                           postinc0	equ	0xFEE
  1104                           fsr0h	equ	0xFEA
  1105                           fsr0l	equ	0xFE9
  1106                           wreg	equ	0xFE8
  1107                           indf2	equ	0xFDF
  1108                           fsr2h	equ	0xFDA
  1109                           fsr2l	equ	0xFD9
  1110                           status	equ	0xFD8
  1111                           
  1112 ;; *************** function _lcd_putc *****************
  1113 ;; Defined at:
  1114 ;;		line 36 in file "myLCD.c"
  1115 ;; Parameters:    Size  Location     Type
  1116 ;;  chr             1    wreg     unsigned char 
  1117 ;; Auto vars:     Size  Location     Type
  1118 ;;  chr             1    4[COMRAM] unsigned char 
  1119 ;; Return value:  Size  Location     Type
  1120 ;;                  1    wreg      void 
  1121 ;; Registers used:
  1122 ;;		wreg, status,2, status,0, cstack
  1123 ;; Tracked objects:
  1124 ;;		On entry : 0/0
  1125 ;;		On exit  : 0/0
  1126 ;;		Unchanged: 0/0
  1127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1128 ;;      Params:         0       0       0       0       0       0       0
  1129 ;;      Locals:         1       0       0       0       0       0       0
  1130 ;;      Temps:          0       0       0       0       0       0       0
  1131 ;;      Totals:         1       0       0       0       0       0       0
  1132 ;;Total ram usage:        1 bytes
  1133 ;; Hardware stack levels used:    1
  1134 ;; Hardware stack levels required when called:    2
  1135 ;; This function calls:
  1136 ;;		_lcd_byte
  1137 ;; This function is called by:
  1138 ;;		_lcd_puts
  1139 ;; This function uses a non-reentrant model
  1140 ;;
  1141                           
  1142                           	psect	text14
  1143  000906                     __ptext14:
  1144                           	opt stack 0
  1145  000906                     _lcd_putc:
  1146                           	opt stack 27
  1147                           
  1148                           ;incstack = 0
  1149                           ;lcd_putc@chr stored from wreg
  1150  000906  6E45               	movwf	lcd_putc@chr,c
  1151                           
  1152                           ;myLCD.c: 38: LATDbits.LATD0 = 1;
  1153  000908  808C               	bsf	3980,0,c	;volatile
  1154                           
  1155                           ;myLCD.c: 39: LATDbits.LATD1 = 0;
  1156  00090A  928C               	bcf	3980,1,c	;volatile
  1157                           
  1158                           ;myLCD.c: 40: lcd_byte(chr);
  1159  00090C  5045               	movf	lcd_putc@chr,w,c
  1160  00090E  EC50  F004         	call	_lcd_byte
  1161  000912  0012               	return		;funcret
  1162  000914                     __end_of_lcd_putc:
  1163                           	opt stack 0
  1164                           tblptru	equ	0xFF8
  1165                           tblptrh	equ	0xFF7
  1166                           tblptrl	equ	0xFF6
  1167                           tablat	equ	0xFF5
  1168                           indf0	equ	0xFEF
  1169                           postinc0	equ	0xFEE
  1170                           fsr0h	equ	0xFEA
  1171                           fsr0l	equ	0xFE9
  1172                           wreg	equ	0xFE8
  1173                           indf2	equ	0xFDF
  1174                           fsr2h	equ	0xFDA
  1175                           fsr2l	equ	0xFD9
  1176                           status	equ	0xFD8
  1177                           
  1178 ;; *************** function _lcd_init *****************
  1179 ;; Defined at:
  1180 ;;		line 63 in file "myLCD.c"
  1181 ;; Parameters:    Size  Location     Type
  1182 ;;		None
  1183 ;; Auto vars:     Size  Location     Type
  1184 ;;		None
  1185 ;; Return value:  Size  Location     Type
  1186 ;;                  1    wreg      void 
  1187 ;; Registers used:
  1188 ;;		wreg, status,2, status,0, cstack
  1189 ;; Tracked objects:
  1190 ;;		On entry : 0/0
  1191 ;;		On exit  : 0/0
  1192 ;;		Unchanged: 0/0
  1193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1194 ;;      Params:         0       0       0       0       0       0       0
  1195 ;;      Locals:         0       0       0       0       0       0       0
  1196 ;;      Temps:          1       0       0       0       0       0       0
  1197 ;;      Totals:         1       0       0       0       0       0       0
  1198 ;;Total ram usage:        1 bytes
  1199 ;; Hardware stack levels used:    1
  1200 ;; Hardware stack levels required when called:    3
  1201 ;; This function calls:
  1202 ;;		_lcd_cmd
  1203 ;;		_lcd_nible
  1204 ;; This function is called by:
  1205 ;;		_main
  1206 ;; This function uses a non-reentrant model
  1207 ;;
  1208                           
  1209                           	psect	text15
  1210  00060C                     __ptext15:
  1211                           	opt stack 0
  1212  00060C                     _lcd_init:
  1213                           	opt stack 27
  1214                           
  1215                           ;myLCD.c: 66: TRISDbits.TRISD3 = 0;
  1216                           
  1217                           ;incstack = 0
  1218  00060C  9695               	bcf	3989,3,c	;volatile
  1219                           
  1220                           ;myLCD.c: 67: TRISDbits.TRISD4 = 0;
  1221  00060E  9895               	bcf	3989,4,c	;volatile
  1222                           
  1223                           ;myLCD.c: 68: TRISDbits.TRISD5 = 0;
  1224  000610  9A95               	bcf	3989,5,c	;volatile
  1225                           
  1226                           ;myLCD.c: 69: TRISDbits.TRISD6 = 0;
  1227  000612  9C95               	bcf	3989,6,c	;volatile
  1228                           
  1229                           ;myLCD.c: 71: TRISDbits.TRISD0 = 0;
  1230  000614  9095               	bcf	3989,0,c	;volatile
  1231                           
  1232                           ;myLCD.c: 72: TRISDbits.TRISD1 = 0;
  1233  000616  9295               	bcf	3989,1,c	;volatile
  1234                           
  1235                           ;myLCD.c: 73: TRISDbits.TRISD2 = 0;
  1236  000618  9495               	bcf	3989,2,c	;volatile
  1237                           
  1238                           ;myLCD.c: 76: _delay((unsigned long)((20)*(11059200/4000.0)));
  1239  00061A  0E48               	movlw	72
  1240  00061C  6E46               	movwf	??_lcd_init& (0+255),c
  1241  00061E  0ECF               	movlw	207
  1242  000620                     u367:
  1243  000620  2EE8               	decfsz	wreg,f,c
  1244  000622  D7FE               	bra	u367
  1245  000624  2E46               	decfsz	??_lcd_init& (0+255),f,c
  1246  000626  D7FC               	bra	u367
  1247  000628  F000               	nop	
  1248                           
  1249                           ;myLCD.c: 77: lcd_nible(0x30);
  1250  00062A  0E30               	movlw	48
  1251  00062C  EC51  F003         	call	_lcd_nible
  1252                           
  1253                           ;myLCD.c: 79: _delay((unsigned long)((20)*(11059200/4000.0)));
  1254  000630  0E48               	movlw	72
  1255  000632  6E46               	movwf	??_lcd_init& (0+255),c
  1256  000634  0ECF               	movlw	207
  1257  000636                     u377:
  1258  000636  2EE8               	decfsz	wreg,f,c
  1259  000638  D7FE               	bra	u377
  1260  00063A  2E46               	decfsz	??_lcd_init& (0+255),f,c
  1261  00063C  D7FC               	bra	u377
  1262  00063E  F000               	nop	
  1263                           
  1264                           ;myLCD.c: 80: lcd_nible(0x30);
  1265  000640  0E30               	movlw	48
  1266  000642  EC51  F003         	call	_lcd_nible
  1267                           
  1268                           ;myLCD.c: 82: _delay((unsigned long)((20)*(11059200/4000.0)));
  1269  000646  0E48               	movlw	72
  1270  000648  6E46               	movwf	??_lcd_init& (0+255),c
  1271  00064A  0ECF               	movlw	207
  1272  00064C                     u387:
  1273  00064C  2EE8               	decfsz	wreg,f,c
  1274  00064E  D7FE               	bra	u387
  1275  000650  2E46               	decfsz	??_lcd_init& (0+255),f,c
  1276  000652  D7FC               	bra	u387
  1277  000654  F000               	nop	
  1278                           
  1279                           ;myLCD.c: 83: lcd_nible(0x30);
  1280  000656  0E30               	movlw	48
  1281  000658  EC51  F003         	call	_lcd_nible
  1282                           
  1283                           ;myLCD.c: 85: _delay((unsigned long)((20)*(11059200/4000.0)));
  1284  00065C  0E48               	movlw	72
  1285  00065E  6E46               	movwf	??_lcd_init& (0+255),c
  1286  000660  0ECF               	movlw	207
  1287  000662                     u397:
  1288  000662  2EE8               	decfsz	wreg,f,c
  1289  000664  D7FE               	bra	u397
  1290  000666  2E46               	decfsz	??_lcd_init& (0+255),f,c
  1291  000668  D7FC               	bra	u397
  1292  00066A  F000               	nop	
  1293                           
  1294                           ;myLCD.c: 86: lcd_nible(0x20);
  1295  00066C  0E20               	movlw	32
  1296  00066E  EC51  F003         	call	_lcd_nible
  1297                           
  1298                           ;myLCD.c: 88: lcd_cmd(0x28);
  1299  000672  0E28               	movlw	40
  1300  000674  EC8A  F004         	call	_lcd_cmd
  1301                           
  1302                           ;myLCD.c: 89: lcd_cmd(0x0C);
  1303  000678  0E0C               	movlw	12
  1304  00067A  EC8A  F004         	call	_lcd_cmd
  1305                           
  1306                           ;myLCD.c: 90: lcd_cmd(0x06);
  1307  00067E  0E06               	movlw	6
  1308  000680  EC8A  F004         	call	_lcd_cmd
  1309                           
  1310                           ;myLCD.c: 91: lcd_cmd(0x01);
  1311  000684  0E01               	movlw	1
  1312  000686  EC8A  F004         	call	_lcd_cmd
  1313                           
  1314                           ;myLCD.c: 92: lcd_cmd(0x02);
  1315  00068A  0E02               	movlw	2
  1316  00068C  EC8A  F004         	call	_lcd_cmd
  1317                           
  1318                           ;myLCD.c: 94: _delay((unsigned long)((50)*(11059200/4000.0)));
  1319  000690  0EB4               	movlw	180
  1320  000692  6E46               	movwf	??_lcd_init& (0+255),c
  1321  000694  0E87               	movlw	135
  1322  000696                     u407:
  1323  000696  2EE8               	decfsz	wreg,f,c
  1324  000698  D7FE               	bra	u407
  1325  00069A  2E46               	decfsz	??_lcd_init& (0+255),f,c
  1326  00069C  D7FC               	bra	u407
  1327  00069E  F000               	nop	
  1328  0006A0  0012               	return		;funcret
  1329  0006A2                     __end_of_lcd_init:
  1330                           	opt stack 0
  1331                           tblptru	equ	0xFF8
  1332                           tblptrh	equ	0xFF7
  1333                           tblptrl	equ	0xFF6
  1334                           tablat	equ	0xFF5
  1335                           indf0	equ	0xFEF
  1336                           postinc0	equ	0xFEE
  1337                           fsr0h	equ	0xFEA
  1338                           fsr0l	equ	0xFE9
  1339                           wreg	equ	0xFE8
  1340                           indf2	equ	0xFDF
  1341                           fsr2h	equ	0xFDA
  1342                           fsr2l	equ	0xFD9
  1343                           status	equ	0xFD8
  1344                           
  1345 ;; *************** function _lcd_gotoxy *****************
  1346 ;; Defined at:
  1347 ;;		line 54 in file "myLCD.c"
  1348 ;; Parameters:    Size  Location     Type
  1349 ;;  col             1    wreg     unsigned char 
  1350 ;;  row             1    5[COMRAM] unsigned char 
  1351 ;; Auto vars:     Size  Location     Type
  1352 ;;  col             1    6[COMRAM] unsigned char 
  1353 ;; Return value:  Size  Location     Type
  1354 ;;                  1    wreg      void 
  1355 ;; Registers used:
  1356 ;;		wreg, status,2, status,0, cstack
  1357 ;; Tracked objects:
  1358 ;;		On entry : 0/0
  1359 ;;		On exit  : 0/0
  1360 ;;		Unchanged: 0/0
  1361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1362 ;;      Params:         1       0       0       0       0       0       0
  1363 ;;      Locals:         1       0       0       0       0       0       0
  1364 ;;      Temps:          0       0       0       0       0       0       0
  1365 ;;      Totals:         2       0       0       0       0       0       0
  1366 ;;Total ram usage:        2 bytes
  1367 ;; Hardware stack levels used:    1
  1368 ;; Hardware stack levels required when called:    3
  1369 ;; This function calls:
  1370 ;;		_lcd_cmd
  1371 ;; This function is called by:
  1372 ;;		_main
  1373 ;; This function uses a non-reentrant model
  1374 ;;
  1375                           
  1376                           	psect	text16
  1377  000784                     __ptext16:
  1378                           	opt stack 0
  1379  000784                     _lcd_gotoxy:
  1380                           	opt stack 27
  1381                           
  1382                           ;incstack = 0
  1383                           ;lcd_gotoxy@col stored from wreg
  1384  000784  6E47               	movwf	lcd_gotoxy@col,c
  1385                           
  1386                           ;myLCD.c: 56: if(row == 1) lcd_cmd(0x80 + col);
  1387  000786  0446               	decf	lcd_gotoxy@row,w,c
  1388  000788  A4D8               	btfss	status,2,c
  1389  00078A  D004               	goto	l963
  1390  00078C  5047               	movf	lcd_gotoxy@col,w,c
  1391  00078E  0F80               	addlw	128
  1392  000790  EC8A  F004         	call	_lcd_cmd
  1393  000794                     l963:
  1394                           
  1395                           ;myLCD.c: 57: if(row == 2) lcd_cmd(0xC0 + col);
  1396  000794  0E02               	movlw	2
  1397  000796  1846               	xorwf	lcd_gotoxy@row,w,c
  1398  000798  A4D8               	btfss	status,2,c
  1399  00079A  D004               	goto	l967
  1400  00079C  5047               	movf	lcd_gotoxy@col,w,c
  1401  00079E  0FC0               	addlw	192
  1402  0007A0  EC8A  F004         	call	_lcd_cmd
  1403  0007A4                     l967:
  1404                           
  1405                           ;myLCD.c: 58: if(row == 3) lcd_cmd(0x94 + col);
  1406  0007A4  0E03               	movlw	3
  1407  0007A6  1846               	xorwf	lcd_gotoxy@row,w,c
  1408  0007A8  A4D8               	btfss	status,2,c
  1409  0007AA  D004               	goto	l971
  1410  0007AC  5047               	movf	lcd_gotoxy@col,w,c
  1411  0007AE  0F94               	addlw	148
  1412  0007B0  EC8A  F004         	call	_lcd_cmd
  1413  0007B4                     l971:
  1414                           
  1415                           ;myLCD.c: 59: if(row == 4) lcd_cmd(0xD4 + col);
  1416  0007B4  0E04               	movlw	4
  1417  0007B6  1846               	xorwf	lcd_gotoxy@row,w,c
  1418  0007B8  A4D8               	btfss	status,2,c
  1419  0007BA  0012               	return	
  1420  0007BC  5047               	movf	lcd_gotoxy@col,w,c
  1421  0007BE  0FD4               	addlw	212
  1422  0007C0  EC8A  F004         	call	_lcd_cmd
  1423  0007C4  0012               	return	
  1424  0007C6                     __end_of_lcd_gotoxy:
  1425                           	opt stack 0
  1426                           tblptru	equ	0xFF8
  1427                           tblptrh	equ	0xFF7
  1428                           tblptrl	equ	0xFF6
  1429                           tablat	equ	0xFF5
  1430                           indf0	equ	0xFEF
  1431                           postinc0	equ	0xFEE
  1432                           fsr0h	equ	0xFEA
  1433                           fsr0l	equ	0xFE9
  1434                           wreg	equ	0xFE8
  1435                           indf2	equ	0xFDF
  1436                           fsr2h	equ	0xFDA
  1437                           fsr2l	equ	0xFD9
  1438                           status	equ	0xFD8
  1439                           
  1440 ;; *************** function _lcd_cmd *****************
  1441 ;; Defined at:
  1442 ;;		line 28 in file "myLCD.c"
  1443 ;; Parameters:    Size  Location     Type
  1444 ;;  cmd             1    wreg     unsigned char 
  1445 ;; Auto vars:     Size  Location     Type
  1446 ;;  cmd             1    4[COMRAM] unsigned char 
  1447 ;; Return value:  Size  Location     Type
  1448 ;;                  1    wreg      void 
  1449 ;; Registers used:
  1450 ;;		wreg, status,2, status,0, cstack
  1451 ;; Tracked objects:
  1452 ;;		On entry : 0/0
  1453 ;;		On exit  : 0/0
  1454 ;;		Unchanged: 0/0
  1455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1456 ;;      Params:         0       0       0       0       0       0       0
  1457 ;;      Locals:         1       0       0       0       0       0       0
  1458 ;;      Temps:          0       0       0       0       0       0       0
  1459 ;;      Totals:         1       0       0       0       0       0       0
  1460 ;;Total ram usage:        1 bytes
  1461 ;; Hardware stack levels used:    1
  1462 ;; Hardware stack levels required when called:    2
  1463 ;; This function calls:
  1464 ;;		_lcd_byte
  1465 ;; This function is called by:
  1466 ;;		_lcd_gotoxy
  1467 ;;		_lcd_init
  1468 ;; This function uses a non-reentrant model
  1469 ;;
  1470                           
  1471                           	psect	text17
  1472  000914                     __ptext17:
  1473                           	opt stack 0
  1474  000914                     _lcd_cmd:
  1475                           	opt stack 27
  1476                           
  1477                           ;incstack = 0
  1478                           ;lcd_cmd@cmd stored from wreg
  1479  000914  6E45               	movwf	lcd_cmd@cmd,c
  1480                           
  1481                           ;myLCD.c: 30: LATDbits.LATD0 = 0;
  1482  000916  908C               	bcf	3980,0,c	;volatile
  1483                           
  1484                           ;myLCD.c: 31: LATDbits.LATD1 = 0;
  1485  000918  928C               	bcf	3980,1,c	;volatile
  1486                           
  1487                           ;myLCD.c: 32: lcd_byte(cmd);
  1488  00091A  5045               	movf	lcd_cmd@cmd,w,c
  1489  00091C  EC50  F004         	call	_lcd_byte
  1490  000920  0012               	return		;funcret
  1491  000922                     __end_of_lcd_cmd:
  1492                           	opt stack 0
  1493                           tblptru	equ	0xFF8
  1494                           tblptrh	equ	0xFF7
  1495                           tblptrl	equ	0xFF6
  1496                           tablat	equ	0xFF5
  1497                           indf0	equ	0xFEF
  1498                           postinc0	equ	0xFEE
  1499                           fsr0h	equ	0xFEA
  1500                           fsr0l	equ	0xFE9
  1501                           wreg	equ	0xFE8
  1502                           indf2	equ	0xFDF
  1503                           fsr2h	equ	0xFDA
  1504                           fsr2l	equ	0xFD9
  1505                           status	equ	0xFD8
  1506                           
  1507 ;; *************** function _lcd_byte *****************
  1508 ;; Defined at:
  1509 ;;		line 20 in file "myLCD.c"
  1510 ;; Parameters:    Size  Location     Type
  1511 ;;  byte            1    wreg     unsigned char 
  1512 ;; Auto vars:     Size  Location     Type
  1513 ;;  byte            1    3[COMRAM] unsigned char 
  1514 ;; Return value:  Size  Location     Type
  1515 ;;                  1    wreg      void 
  1516 ;; Registers used:
  1517 ;;		wreg, status,2, status,0, cstack
  1518 ;; Tracked objects:
  1519 ;;		On entry : 0/0
  1520 ;;		On exit  : 0/0
  1521 ;;		Unchanged: 0/0
  1522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1523 ;;      Params:         0       0       0       0       0       0       0
  1524 ;;      Locals:         1       0       0       0       0       0       0
  1525 ;;      Temps:          0       0       0       0       0       0       0
  1526 ;;      Totals:         1       0       0       0       0       0       0
  1527 ;;Total ram usage:        1 bytes
  1528 ;; Hardware stack levels used:    1
  1529 ;; Hardware stack levels required when called:    1
  1530 ;; This function calls:
  1531 ;;		_lcd_nible
  1532 ;; This function is called by:
  1533 ;;		_lcd_cmd
  1534 ;;		_lcd_putc
  1535 ;; This function uses a non-reentrant model
  1536 ;;
  1537                           
  1538                           	psect	text18
  1539  0008A0                     __ptext18:
  1540                           	opt stack 0
  1541  0008A0                     _lcd_byte:
  1542                           	opt stack 27
  1543                           
  1544                           ;incstack = 0
  1545                           ;lcd_byte@byte stored from wreg
  1546  0008A0  6E44               	movwf	lcd_byte@byte,c
  1547                           
  1548                           ;myLCD.c: 22: lcd_nible(byte);
  1549  0008A2  5044               	movf	lcd_byte@byte,w,c
  1550  0008A4  EC51  F003         	call	_lcd_nible
  1551                           
  1552                           ;myLCD.c: 23: lcd_nible(byte << 4);
  1553  0008A8  3844               	swapf	lcd_byte@byte,w,c
  1554  0008AA  0BF0               	andlw	240
  1555  0008AC  EC51  F003         	call	_lcd_nible
  1556                           
  1557                           ;myLCD.c: 24: _delay((unsigned long)((10)*(11059200/4000000.0)));
  1558  0008B0  0E09               	movlw	9
  1559  0008B2                     u417:
  1560  0008B2  2EE8               	decfsz	wreg,f,c
  1561  0008B4  D7FE               	bra	u417
  1562  0008B6  0012               	return		;funcret
  1563  0008B8                     __end_of_lcd_byte:
  1564                           	opt stack 0
  1565                           tblptru	equ	0xFF8
  1566                           tblptrh	equ	0xFF7
  1567                           tblptrl	equ	0xFF6
  1568                           tablat	equ	0xFF5
  1569                           indf0	equ	0xFEF
  1570                           postinc0	equ	0xFEE
  1571                           fsr0h	equ	0xFEA
  1572                           fsr0l	equ	0xFE9
  1573                           wreg	equ	0xFE8
  1574                           indf2	equ	0xFDF
  1575                           fsr2h	equ	0xFDA
  1576                           fsr2l	equ	0xFD9
  1577                           status	equ	0xFD8
  1578                           
  1579 ;; *************** function _lcd_nible *****************
  1580 ;; Defined at:
  1581 ;;		line 6 in file "myLCD.c"
  1582 ;; Parameters:    Size  Location     Type
  1583 ;;  nible           1    wreg     unsigned char 
  1584 ;; Auto vars:     Size  Location     Type
  1585 ;;  nible           1    2[COMRAM] unsigned char 
  1586 ;; Return value:  Size  Location     Type
  1587 ;;                  1    wreg      void 
  1588 ;; Registers used:
  1589 ;;		wreg, status,2, status,0
  1590 ;; Tracked objects:
  1591 ;;		On entry : 0/0
  1592 ;;		On exit  : 0/0
  1593 ;;		Unchanged: 0/0
  1594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1595 ;;      Params:         0       0       0       0       0       0       0
  1596 ;;      Locals:         1       0       0       0       0       0       0
  1597 ;;      Temps:          2       0       0       0       0       0       0
  1598 ;;      Totals:         3       0       0       0       0       0       0
  1599 ;;Total ram usage:        3 bytes
  1600 ;; Hardware stack levels used:    1
  1601 ;; This function calls:
  1602 ;;		Nothing
  1603 ;; This function is called by:
  1604 ;;		_lcd_byte
  1605 ;;		_lcd_init
  1606 ;; This function uses a non-reentrant model
  1607 ;;
  1608                           
  1609                           	psect	text19
  1610  0006A2                     __ptext19:
  1611                           	opt stack 0
  1612  0006A2                     _lcd_nible:
  1613                           	opt stack 27
  1614                           
  1615                           ;incstack = 0
  1616                           ;lcd_nible@nible stored from wreg
  1617  0006A2  6E43               	movwf	lcd_nible@nible,c
  1618                           
  1619                           ;myLCD.c: 8: LATDbits.LATD3 = (nible >> 4) & 0x01;
  1620  0006A4  C043  F041         	movff	lcd_nible@nible,??_lcd_nible
  1621  0006A8  3A41               	swapf	??_lcd_nible,f,c
  1622  0006AA  0E0F               	movlw	15
  1623  0006AC  1641               	andwf	??_lcd_nible,f,c
  1624  0006AE  0E01               	movlw	1
  1625  0006B0  1641               	andwf	??_lcd_nible,f,c
  1626  0006B2  4641               	rlncf	??_lcd_nible,f,c
  1627  0006B4  4641               	rlncf	??_lcd_nible,f,c
  1628  0006B6  4641               	rlncf	??_lcd_nible,f,c
  1629  0006B8  508C               	movf	3980,w,c	;volatile
  1630  0006BA  1841               	xorwf	??_lcd_nible,w,c
  1631  0006BC  0BF7               	andlw	-9
  1632  0006BE  1841               	xorwf	??_lcd_nible,w,c
  1633  0006C0  6E8C               	movwf	3980,c	;volatile
  1634                           
  1635                           ;myLCD.c: 9: LATDbits.LATD4 = (nible >> 5) & 0x01;
  1636  0006C2  C043  F041         	movff	lcd_nible@nible,??_lcd_nible
  1637  0006C6  0E05               	movlw	5
  1638  0006C8  6E42               	movwf	(??_lcd_nible+1)& (0+255),c
  1639  0006CA                     u15:
  1640  0006CA  90D8               	bcf	status,0,c
  1641  0006CC  3241               	rrcf	??_lcd_nible,f,c
  1642  0006CE  2E42               	decfsz	(??_lcd_nible+1)& (0+255),f,c
  1643  0006D0  D7FC               	goto	u15
  1644  0006D2  0E01               	movlw	1
  1645  0006D4  1641               	andwf	??_lcd_nible,f,c
  1646  0006D6  3A41               	swapf	??_lcd_nible,f,c
  1647  0006D8  508C               	movf	3980,w,c	;volatile
  1648  0006DA  1841               	xorwf	??_lcd_nible,w,c
  1649  0006DC  0BEF               	andlw	-17
  1650  0006DE  1841               	xorwf	??_lcd_nible,w,c
  1651  0006E0  6E8C               	movwf	3980,c	;volatile
  1652                           
  1653                           ;myLCD.c: 10: LATDbits.LATD5 = (nible >> 6) & 0x01;
  1654  0006E2  C043  F041         	movff	lcd_nible@nible,??_lcd_nible
  1655  0006E6  0E06               	movlw	6
  1656  0006E8  6E42               	movwf	(??_lcd_nible+1)& (0+255),c
  1657  0006EA                     u25:
  1658  0006EA  90D8               	bcf	status,0,c
  1659  0006EC  3241               	rrcf	??_lcd_nible,f,c
  1660  0006EE  2E42               	decfsz	(??_lcd_nible+1)& (0+255),f,c
  1661  0006F0  D7FC               	goto	u25
  1662  0006F2  0E01               	movlw	1
  1663  0006F4  1641               	andwf	??_lcd_nible,f,c
  1664  0006F6  3A41               	swapf	??_lcd_nible,f,c
  1665  0006F8  4641               	rlncf	??_lcd_nible,f,c
  1666  0006FA  508C               	movf	3980,w,c	;volatile
  1667  0006FC  1841               	xorwf	??_lcd_nible,w,c
  1668  0006FE  0BDF               	andlw	-33
  1669  000700  1841               	xorwf	??_lcd_nible,w,c
  1670  000702  6E8C               	movwf	3980,c	;volatile
  1671                           
  1672                           ;myLCD.c: 11: LATDbits.LATD6 = (nible >> 7) & 0x01;
  1673  000704  6A41               	clrf	??_lcd_nible& (0+255),c
  1674  000706  AE43               	btfss	lcd_nible@nible,7,c
  1675  000708  D001               	bra	u35
  1676  00070A  2A41               	incf	??_lcd_nible& (0+255),f,c
  1677  00070C                     u35:
  1678  00070C  0E01               	movlw	1
  1679  00070E  1641               	andwf	??_lcd_nible,f,c
  1680  000710  3A41               	swapf	??_lcd_nible,f,c
  1681  000712  4641               	rlncf	??_lcd_nible,f,c
  1682  000714  4641               	rlncf	??_lcd_nible,f,c
  1683  000716  508C               	movf	3980,w,c	;volatile
  1684  000718  1841               	xorwf	??_lcd_nible,w,c
  1685  00071A  0BBF               	andlw	-65
  1686  00071C  1841               	xorwf	??_lcd_nible,w,c
  1687  00071E  6E8C               	movwf	3980,c	;volatile
  1688                           
  1689                           ;myLCD.c: 13: LATDbits.LATD2 = 1;
  1690  000720  848C               	bsf	3980,2,c	;volatile
  1691                           
  1692                           ;myLCD.c: 14: _delay((unsigned long)((10)*(11059200/4000000.0)));
  1693  000722  0E09               	movlw	9
  1694  000724                     u427:
  1695  000724  2EE8               	decfsz	wreg,f,c
  1696  000726  D7FE               	bra	u427
  1697                           
  1698                           ;myLCD.c: 15: LATDbits.LATD2 = 0;
  1699  000728  948C               	bcf	3980,2,c	;volatile
  1700                           
  1701                           ;myLCD.c: 16: _delay((unsigned long)((50)*(11059200/4000000.0)));
  1702  00072A  0E2E               	movlw	46
  1703  00072C                     u437:
  1704  00072C  2EE8               	decfsz	wreg,f,c
  1705  00072E  D7FE               	bra	u437
  1706  000730  0012               	return		;funcret
  1707  000732                     __end_of_lcd_nible:
  1708                           	opt stack 0
  1709                           tblptru	equ	0xFF8
  1710                           tblptrh	equ	0xFF7
  1711                           tblptrl	equ	0xFF6
  1712                           tablat	equ	0xFF5
  1713                           indf0	equ	0xFEF
  1714                           postinc0	equ	0xFEE
  1715                           fsr0h	equ	0xFEA
  1716                           fsr0l	equ	0xFE9
  1717                           wreg	equ	0xFE8
  1718                           indf2	equ	0xFDF
  1719                           fsr2h	equ	0xFDA
  1720                           fsr2l	equ	0xFD9
  1721                           status	equ	0xFD8
  1722                           tblptru	equ	0xFF8
  1723                           tblptrh	equ	0xFF7
  1724                           tblptrl	equ	0xFF6
  1725                           tablat	equ	0xFF5
  1726                           indf0	equ	0xFEF
  1727                           postinc0	equ	0xFEE
  1728                           fsr0h	equ	0xFEA
  1729                           fsr0l	equ	0xFE9
  1730                           wreg	equ	0xFE8
  1731                           indf2	equ	0xFDF
  1732                           fsr2h	equ	0xFDA
  1733                           fsr2l	equ	0xFD9
  1734                           status	equ	0xFD8
  1735                           
  1736                           	psect	rparam
  1737  0000                     tblptru	equ	0xFF8
  1738                           tblptrh	equ	0xFF7
  1739                           tblptrl	equ	0xFF6
  1740                           tablat	equ	0xFF5
  1741                           indf0	equ	0xFEF
  1742                           postinc0	equ	0xFEE
  1743                           fsr0h	equ	0xFEA
  1744                           fsr0l	equ	0xFE9
  1745                           wreg	equ	0xFE8
  1746                           indf2	equ	0xFDF
  1747                           fsr2h	equ	0xFDA
  1748                           fsr2l	equ	0xFD9
  1749                           status	equ	0xFD8


Data Sizes:
    Strings     9
    Constant    0
    Data        0
    BSS         64
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127      7      71
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    uartGets@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> buffer(COMRAM[64]), 

    lcd_puts@str	PTR unsigned char  size(2) Largest target is 64
		 -> buffer(COMRAM[64]), STR_1(CODE[9]), 


Critical Paths under _main in COMRAM

    _main->_lcd_gotoxy
    _main->_lcd_puts
    _uartOpen->_uartIntMode
    _lcd_puts->_lcd_putc
    _lcd_putc->_lcd_byte
    _lcd_init->_lcd_cmd
    _lcd_gotoxy->_lcd_cmd
    _lcd_cmd->_lcd_byte
    _lcd_byte->_lcd_nible

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1221
                         _lcd_gotoxy
                           _lcd_init
                           _lcd_puts
                           _uartGets
                           _uartOpen
 ---------------------------------------------------------------------------------
 (1) _uartOpen                                             0     0      0     213
                   _uartBaudrateMode
                        _uartBitMode
                        _uartIntMode
                         _uartRxMode
                    _uartSetBaudrate
                          _uartStart
                       _uartSyncMode
                      _uartSynchMode
 ---------------------------------------------------------------------------------
 (2) _uartSynchMode                                        1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _uartSyncMode                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _uartStart                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _uartSetBaudrate                                      1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _uartRxMode                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _uartIntMode                                          2     1      1     108
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _uartBitMode                                          1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _uartBaudrateMode                                     1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _uartGets                                             5     2      3     220
                                              0 COMRAM     5     2      3
                        _uartDataRdy
                           _uartRead
 ---------------------------------------------------------------------------------
 (2) _uartRead                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _uartDataRdy                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             2     0      2     278
                                              5 COMRAM     2     0      2
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (2) _lcd_putc                                             1     1      0     105
                                              4 COMRAM     1     1      0
                           _lcd_byte
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0     165
                                              5 COMRAM     1     1      0
                            _lcd_cmd
                          _lcd_nible
 ---------------------------------------------------------------------------------
 (1) _lcd_gotoxy                                           2     1      1     345
                                              5 COMRAM     2     1      1
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              1     1      0     105
                                              4 COMRAM     1     1      0
                           _lcd_byte
 ---------------------------------------------------------------------------------
 (3) _lcd_byte                                             1     1      0      90
                                              3 COMRAM     1     1      0
                          _lcd_nible
 ---------------------------------------------------------------------------------
 (4) _lcd_nible                                            3     3      0      60
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_gotoxy
     _lcd_cmd
       _lcd_byte
         _lcd_nible
   _lcd_init
     _lcd_cmd
       _lcd_byte
         _lcd_nible
     _lcd_nible
   _lcd_puts
     _lcd_putc
       _lcd_byte
         _lcd_nible
   _uartGets
     _uartDataRdy
     _uartRead
   _uartOpen
     _uartBaudrateMode
     _uartBitMode
     _uartIntMode
     _uartRxMode
     _uartSetBaudrate
     _uartStart
     _uartSyncMode
     _uartSynchMode

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F      7      47       1       55.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      47      15        0.0%
DATA                 0      0      47       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Mon Feb 27 10:23:22 2017

                       u15 06CA                         u25 06EA                         u35 070C  
                       u65 0902                         u66 0904                         u75 08F4  
                       u76 08F6                         u85 08E6                         u86 08E8  
                       u95 0892                         u96 0894                __CFG_BORV$3 000000  
              __CFG_OSC$HS 000000                __CFG_LVP$ON 000000                        l801 092A  
                      l943 075C                        l971 07B4                        l963 0794  
                      l939 0734                        l947 0844                        l957 0866  
                      l981 07DA                        l967 07A4                        u105 089C  
                      u106 089E                        u115 08D8                        u116 08DA  
                      u270 0754                        u407 0696                        u255 087A  
                      u280 077C                        u256 087C                        u417 08B2  
                      u265 0884                        u266 0886                        u427 0724  
                      u437 072C                        u277 074A                        u367 0620  
                      u287 0772                        u377 0636                        u387 064C  
                      u397 0662                        wreg 000FE8            _uartSetBaudrate 092E  
             __CFG_WDT$OFF 000000                       STR_1 0601                lcd_putc@chr 0045  
                     _main 07C6               lcd_byte@byte 0044                       fsr0h 000FEA  
                     indf0 000FEF                       fsr2h 000FDA                       fsr0l 000FE9  
                     indf2 000FDF                       fsr2l 000FD9                lcd_puts@str 0046  
                     start 0000              __CFG_IESO$OFF 000000           uartSyncMode@mode 0041  
            __CFG_MCLRE$ON 000000               ___param_bank 000000                      ?_main 0041  
        uartIntMode@rxMode 0041          uartIntMode@txMode 0042                      _RCREG 000FAE  
                    _RCSTA 000FAB                      _SPBRG 000FAF                      _TXREG 000FAD  
                    _TXSTA 000FAC              __CFG_PWRT$OFF 000000             __CFG_FCMEN$OFF 000000  
          __end_of_lcd_cmd 0922          ?_uartBaudrateMode 0041             __CFG_BOREN$OFF 000000  
                    tablat 000FF5         ??_uartBaudrateMode 0041                      status 000FD8  
     uartSetBaudrate@spbrg 0041            __initialization 08B8               __end_of_main 0802  
            lcd_gotoxy@col 0047              lcd_gotoxy@row 0046                     ??_main 0048  
            __activetblptr 000002    __end_of_uartSetBaudrate 0936               ?_uartDataRdy 0041  
             ?_uartBitMode 0041             __CFG_XINST$OFF 000000               ?_uartIntMode 0041  
         __end_of_lcd_byte 08B8           __end_of_lcd_init 06A2           __end_of_lcd_putc 0914  
         __end_of_lcd_puts 0784             __CFG_STVREN$ON 000000                     _buffer 0001  
                   clear_0 08BE                  ??_lcd_cmd 0045           __end_of_uartGets 0870  
         __end_of_uartRead 0940           __end_of_uartOpen 083E               __mediumconst 0000  
                   tblptrh 000FF7                     tblptrl 000FF6                     tblptru 000FF8  
           lcd_nible@nible 0043          uartSynchMode@mode 0041                 __accesstop 0080  
  __end_of__initialization 08C4            __CFG_PBADEN$OFF 000000              ___rparam_used 000001  
           __pcstackCOMRAM 0041           ?_uartSetBaudrate 0041         __size_of_lcd_nible 0090  
    __end_of_uartSynchMode 08DC         __size_of_uartStart 0006                 _lcd_gotoxy 0784  
                ?_lcd_byte 0041                  ?_lcd_init 0041                  ?_lcd_putc 0041  
                ?_lcd_puts 0046                    __Hparam 0000                    __Lparam 0000  
                ?_uartGets 0041       __size_of_uartDataRdy 000C                  ?_uartRead 0041  
                ?_uartOpen 0041       __size_of_uartBitMode 0018          __end_of_lcd_nible 0732  
__size_of_uartBaudrateMode 000E       __size_of_uartIntMode 0018               __psmallconst 0600  
                  __pcinit 08B8                    __ramtop 0600                    __ptext0 07C6  
                  __ptext1 0802                    __ptext2 08CE                    __ptext3 08DC  
                  __ptext4 0936                    __ptext5 092E                    __ptext6 08EA  
                  __ptext7 0870                    __ptext8 0888                    __ptext9 08F8  
                  _lcd_cmd 0914                uartGets@len 0043              ?_uartSyncMode 0041  
           uartGets@buffer 0041                 ??_lcd_byte 0044                 ??_lcd_init 0046  
               ??_lcd_putc 0045                 ??_lcd_puts 0048       end_of_initialization 08C4  
            __Lmediumconst 0000          __end_of_uartStart 093C                 ??_uartGets 0044  
               ??_uartRead 0041                 ??_uartOpen 0043                  _RCSTAbits 000FAB  
               _uartRxMode 08EA                    postinc0 000FEE             ??_uartSyncMode 0041  
                _TRISDbits 000F95                ?_lcd_gotoxy 0046                 lcd_cmd@cmd 0045  
                _TXSTAbits 000FAC        start_initialization 08B8                ?_uartRxMode 0041  
      __size_of_lcd_gotoxy 0042           _uartBaudrateMode 08F8           __CFG_LPT1OSC$OFF 000000  
              __pbssCOMRAM 0001             uartRxMode@mode 0041   __size_of_uartSetBaudrate 0008  
        __size_of_lcd_byte 0018          __size_of_lcd_init 0096          __size_of_lcd_putc 000E  
        __size_of_lcd_puts 0052          __CFG_CCP2MX$PORTC 000000       __end_of_uartSyncMode 08EA  
        __size_of_uartGets 0032          __size_of_uartRead 0004          __size_of_uartOpen 003C  
                _lcd_nible 06A2                   ?_lcd_cmd 0041                __smallconst 0600  
          uartBitMode@mode 0041        __size_of_uartRxMode 000E     __size_of_uartSynchMode 000E  
                 _LATDbits 000F8C              ??_uartDataRdy 0041              ??_uartBitMode 0041  
                 _PIR1bits 000F9E              ??_uartIntMode 0042           __CFG_WDTPS$32768 000000  
                _uartStart 0936                 ?_lcd_nible 0041               ??_lcd_gotoxy 0047  
                 __Hrparam 0000          ??_uartSetBaudrate 0041                   __Lrparam 0000  
               ?_uartStart 0041        __end_of_uartDataRdy 092E        __end_of_uartBitMode 08A0  
       __end_of_lcd_gotoxy 07C6              _uartSynchMode 08CE        __end_of_uartIntMode 0888  
         __size_of_lcd_cmd 000E                   __ptext10 083E                   __ptext11 093C  
                 __ptext12 0922                   __ptext13 0732                   __ptext14 0906  
                 __ptext15 060C                   __ptext16 0784                   __ptext17 0914  
                 __ptext18 08A0                   __ptext19 06A2   __end_of_uartBaudrateMode 0906  
                 _lcd_byte 08A0                   _lcd_init 060C                   _lcd_putc 0906  
                 _lcd_puts 0732              __size_of_main 003C      __size_of_uartSyncMode 000E  
                uartGets@i 0045               uartGets@data 0044                   _uartGets 083E  
                 _uartRead 093C                   _uartOpen 0802               ??_uartRxMode 0041  
           ?_uartSynchMode 0041                ??_lcd_nible 0041               _uartSyncMode 08DC  
       __end_of_uartRxMode 08F8                _uartDataRdy 0922                _uartBitMode 0888  
              _uartIntMode 0870                ??_uartStart 0041       uartBaudrateMode@mode 0041  
          ??_uartSynchMode 0041  
