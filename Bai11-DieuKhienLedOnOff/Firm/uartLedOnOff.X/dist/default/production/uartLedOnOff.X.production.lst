

Microchip Technology PIC18 LITE Macro Assembler V1.40 build -251452761 
                                                                                               Thu Feb 23 10:18:46 2017

Microchip Technology Omniscient Code Generator v1.40 (Free mode) build 201612010151
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    25  0000                     
    26                           ; Version 1.40
    27                           ; Generated 01/12/2016 GMT
    28                           ; 
    29                           ; Copyright Â© 2016, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC18F4520 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     _LATD	set	3980
    61  0000                     _PIR1bits	set	3998
    62  0000                     _RCREG	set	4014
    63  0000                     _RCSTA	set	4011
    64  0000                     _RCSTAbits	set	4011
    65  0000                     _SPBRG	set	4015
    66  0000                     _TRISD	set	3989
    67  0000                     _TXREG	set	4013
    68  0000                     _TXSTA	set	4012
    69  0000                     _TXSTAbits	set	4012
    70                           
    71                           	psect	smallconst
    72  000600                     __psmallconst:
    73                           	opt stack 0
    74  000600  00                 	db	0
    75  000601                     STR_1:
    76  000601  58                 	db	88	;'X'
    77  000602  69                 	db	105	;'i'
    78  000603  6E                 	db	110	;'n'
    79  000604  20                 	db	32
    80  000605  63                 	db	99	;'c'
    81  000606  68                 	db	104	;'h'
    82  000607  61                 	db	97	;'a'
    83  000608  6F                 	db	111	;'o'
    84  000609  00                 	db	0
    85                           
    86                           ; #config settings
    87  00060A  00                 	db	0	; dummy byte at the end
    88  0000                     
    89                           	psect	cinit
    90  000718                     __pcinit:
    91                           	opt stack 0
    92  000718                     start_initialization:
    93                           	opt stack 0
    94  000718                     __initialization:
    95                           	opt stack 0
    96                           
    97                           ; Clear objects allocated to COMRAM (1 bytes)
    98  000718  6A04               	clrf	__pbssCOMRAM& (0+255),c
    99  00071A                     end_of_initialization:
   100                           	opt stack 0
   101  00071A                     __end_of__initialization:
   102                           	opt stack 0
   103  00071A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   104  00071C  6EF8               	movwf	tblptru,c
   105  00071E  0100               	movlb	0
   106  000720  EF24  F003         	goto	_main	;jump to C main() function
   107                           tblptru	equ	0xFF8
   108                           
   109                           	psect	bssCOMRAM
   110  000004                     __pbssCOMRAM:
   111                           	opt stack 0
   112  000004                     _uartCmd:
   113                           	opt stack 0
   114  000004                     	ds	1
   115                           tblptru	equ	0xFF8
   116                           
   117                           	psect	cstackCOMRAM
   118  000001                     __pcstackCOMRAM:
   119                           	opt stack 0
   120  000001                     uartIntMode@rxMode:
   121                           	opt stack 0
   122  000001                     uartBaudrateMode@mode:
   123                           	opt stack 0
   124  000001                     uartSetBaudrate@spbrg:
   125                           	opt stack 0
   126  000001                     uartRxMode@mode:
   127                           	opt stack 0
   128  000001                     uartSyncMode@mode:
   129                           	opt stack 0
   130  000001                     uartBitMode@mode:
   131                           	opt stack 0
   132  000001                     uartSynchMode@mode:
   133                           	opt stack 0
   134  000001                     uartWrite@data:
   135                           	opt stack 0
   136                           
   137                           ; 1 bytes @ 0x0
   138  000001                     	ds	1
   139  000002                     uartIntMode@txMode:
   140                           	opt stack 0
   141  000002                     uartPuts@str:
   142                           	opt stack 0
   143                           
   144                           ; 2 bytes @ 0x1
   145  000002                     	ds	1
   146  000003                     
   147                           ; 1 bytes @ 0x2
   148  000003                     	ds	1
   149  000004                     tblptru	equ	0xFF8
   150                           
   151                           ; 1 bytes @ 0x3
   152 ;;
   153 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   154 ;;
   155 ;; *************** function _main *****************
   156 ;; Defined at:
   157 ;;		line 35 in file "main.c"
   158 ;; Parameters:    Size  Location     Type
   159 ;;		None
   160 ;; Auto vars:     Size  Location     Type
   161 ;;		None
   162 ;; Return value:  Size  Location     Type
   163 ;;                  1    wreg      void 
   164 ;; Registers used:
   165 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   166 ;; Tracked objects:
   167 ;;		On entry : 0/0
   168 ;;		On exit  : 0/0
   169 ;;		Unchanged: 0/0
   170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   171 ;;      Params:         0       0       0       0       0       0       0
   172 ;;      Locals:         0       0       0       0       0       0       0
   173 ;;      Temps:          0       0       0       0       0       0       0
   174 ;;      Totals:         0       0       0       0       0       0       0
   175 ;;Total ram usage:        0 bytes
   176 ;; Hardware stack levels required when called:    2
   177 ;; This function calls:
   178 ;;		_uartOpen
   179 ;;		_uartPuts
   180 ;;		_uartRead
   181 ;; This function is called by:
   182 ;;		Startup code after reset
   183 ;; This function uses a non-reentrant model
   184 ;;
   185                           
   186                           	psect	text0
   187  000648                     __ptext0:
   188                           	opt stack 0
   189  000648                     _main:
   190                           	opt stack 29
   191                           
   192                           ;main.c: 37: TRISD = 0x00;
   193                           
   194                           ;incstack = 0
   195  000648  0E00               	movlw	0
   196  00064A  6E95               	movwf	3989,c	;volatile
   197                           
   198                           ;main.c: 38: uartOpen();
   199  00064C  EC06  F003         	call	_uartOpen	;wreg free
   200                           
   201                           ;main.c: 39: uartPuts("Xin chao");
   202  000650  0E01               	movlw	low STR_1
   203  000652  6E02               	movwf	uartPuts@str,c
   204  000654  0E06               	movlw	high STR_1
   205  000656  6E03               	movwf	uartPuts@str+1,c
   206  000658  EC3F  F003         	call	_uartPuts	;wreg free
   207  00065C                     l849:
   208                           
   209                           ;main.c: 41: {
   210                           ;main.c: 42: uartCmd = uartRead();
   211  00065C  ECA3  F003         	call	_uartRead	;wreg free
   212  000660  6E04               	movwf	_uartCmd,c
   213                           
   214                           ;main.c: 43: switch(uartCmd)
   215  000662  D005               	goto	l855
   216  000664                     l851:
   217  000664  0E00               	movlw	0
   218  000666  6E8C               	movwf	3980,c	;volatile
   219                           
   220                           ;main.c: 46: break;
   221  000668  D7F9               	goto	l849
   222  00066A                     l19:
   223  00066A  688C               	setf	3980,c	;volatile
   224                           
   225                           ;main.c: 49: }
   226                           
   227                           ;main.c: 48: break;
   228  00066C  D7F7               	goto	l849
   229  00066E                     l855:
   230  00066E  5004               	movf	_uartCmd,w,c
   231                           
   232                           ; Switch size 1, requested type "space"
   233                           ; Number of cases is 2, Range of values is 97 to 98
   234                           ; switch strategies available:
   235                           ; Name         Instructions Cycles
   236                           ; simple_byte            7     4 (average)
   237                           ;	Chosen strategy is simple_byte
   238  000670  0A61               	xorlw	97	; case 97
   239  000672  B4D8               	btfsc	status,2,c
   240  000674  D7F7               	goto	l851
   241  000676  0A03               	xorlw	3	; case 98
   242  000678  B4D8               	btfsc	status,2,c
   243  00067A  D7F7               	goto	l19
   244  00067C  D7EF               	goto	l849
   245  00067E                     __end_of_main:
   246                           	opt stack 0
   247                           tblptru	equ	0xFF8
   248                           status	equ	0xFD8
   249                           
   250 ;; *************** function _uartRead *****************
   251 ;; Defined at:
   252 ;;		line 74 in file "myUart.c"
   253 ;; Parameters:    Size  Location     Type
   254 ;;		None
   255 ;; Auto vars:     Size  Location     Type
   256 ;;		None
   257 ;; Return value:  Size  Location     Type
   258 ;;                  1    wreg      unsigned char 
   259 ;; Registers used:
   260 ;;		wreg, status,2
   261 ;; Tracked objects:
   262 ;;		On entry : 0/0
   263 ;;		On exit  : 0/0
   264 ;;		Unchanged: 0/0
   265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   266 ;;      Params:         0       0       0       0       0       0       0
   267 ;;      Locals:         0       0       0       0       0       0       0
   268 ;;      Temps:          0       0       0       0       0       0       0
   269 ;;      Totals:         0       0       0       0       0       0       0
   270 ;;Total ram usage:        0 bytes
   271 ;; Hardware stack levels used:    1
   272 ;; This function calls:
   273 ;;		Nothing
   274 ;; This function is called by:
   275 ;;		_main
   276 ;;		_uartGets
   277 ;; This function uses a non-reentrant model
   278 ;;
   279                           
   280                           	psect	text1
   281  000746                     __ptext1:
   282                           	opt stack 0
   283  000746                     _uartRead:
   284                           	opt stack 30
   285                           
   286                           ;myUart.c: 76: return RCREG;
   287                           
   288                           ;incstack = 0
   289  000746  50AE               	movf	4014,w,c	;volatile
   290  000748  0012               	return	
   291  00074A                     __end_of_uartRead:
   292                           	opt stack 0
   293                           tblptru	equ	0xFF8
   294                           status	equ	0xFD8
   295                           
   296 ;; *************** function _uartPuts *****************
   297 ;; Defined at:
   298 ;;		line 97 in file "myUart.c"
   299 ;; Parameters:    Size  Location     Type
   300 ;;  str             2    1[COMRAM] PTR unsigned char 
   301 ;;		 -> STR_1(9), 
   302 ;; Auto vars:     Size  Location     Type
   303 ;;		None
   304 ;; Return value:  Size  Location     Type
   305 ;;                  1    wreg      void 
   306 ;; Registers used:
   307 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   308 ;; Tracked objects:
   309 ;;		On entry : 0/0
   310 ;;		On exit  : 0/0
   311 ;;		Unchanged: 0/0
   312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   313 ;;      Params:         2       0       0       0       0       0       0
   314 ;;      Locals:         0       0       0       0       0       0       0
   315 ;;      Temps:          0       0       0       0       0       0       0
   316 ;;      Totals:         2       0       0       0       0       0       0
   317 ;;Total ram usage:        2 bytes
   318 ;; Hardware stack levels used:    1
   319 ;; Hardware stack levels required when called:    1
   320 ;; This function calls:
   321 ;;		_uartBusy
   322 ;;		_uartWrite
   323 ;; This function is called by:
   324 ;;		_main
   325 ;; This function uses a non-reentrant model
   326 ;;
   327                           
   328                           	psect	text2
   329  00067E                     __ptext2:
   330                           	opt stack 0
   331  00067E                     _uartPuts:
   332                           	opt stack 29
   333  00067E                     l837:
   334  00067E  EC92  F003         	call	_uartBusy	;wreg free
   335  000682  0900               	iorlw	0
   336  000684  A4D8               	btfss	status,2,c
   337  000686  D7FB               	goto	l837
   338                           
   339                           ;myUart.c: 103: uartWrite(*str);
   340  000688  C002  FFF6         	movff	uartPuts@str,tblptrl
   341  00068C  C003  FFF7         	movff	uartPuts@str+1,tblptrh
   342  000690                     	if	0	;tblptru may be non-zero
   343  000690                     	endif
   344  000690                     	if	0	;tblptru may be non-zero
   345  000690                     	endif
   346  000690  0008               	tblrd		*
   347  000692  50F5               	movf	tablat,w,c
   348  000694  EC98  F003         	call	_uartWrite
   349                           
   350                           ;myUart.c: 104: }
   351                           ;myUart.c: 105: while( *str++ );
   352  000698  C002  FFF6         	movff	uartPuts@str,tblptrl
   353  00069C  C003  FFF7         	movff	uartPuts@str+1,tblptrh
   354  0006A0  4A02               	infsnz	uartPuts@str,f,c
   355  0006A2  2A03               	incf	uartPuts@str+1,f,c
   356  0006A4                     	if	0	;tblptru may be non-zero
   357  0006A4                     	endif
   358  0006A4                     	if	0	;tblptru may be non-zero
   359  0006A4                     	endif
   360  0006A4  0008               	tblrd		*
   361  0006A6  50F5               	movf	tablat,w,c
   362  0006A8  0900               	iorlw	0
   363  0006AA  B4D8               	btfsc	status,2,c
   364  0006AC  0012               	return	
   365  0006AE  D7E7               	goto	l837
   366  0006B0                     __end_of_uartPuts:
   367                           	opt stack 0
   368                           tblptru	equ	0xFF8
   369                           tblptrh	equ	0xFF7
   370                           tblptrl	equ	0xFF6
   371                           tablat	equ	0xFF5
   372                           status	equ	0xFD8
   373                           
   374 ;; *************** function _uartWrite *****************
   375 ;; Defined at:
   376 ;;		line 78 in file "myUart.c"
   377 ;; Parameters:    Size  Location     Type
   378 ;;  data            1    wreg     unsigned char 
   379 ;; Auto vars:     Size  Location     Type
   380 ;;  data            1    0[COMRAM] unsigned char 
   381 ;; Return value:  Size  Location     Type
   382 ;;                  1    wreg      void 
   383 ;; Registers used:
   384 ;;		wreg
   385 ;; Tracked objects:
   386 ;;		On entry : 0/0
   387 ;;		On exit  : 0/0
   388 ;;		Unchanged: 0/0
   389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   390 ;;      Params:         0       0       0       0       0       0       0
   391 ;;      Locals:         1       0       0       0       0       0       0
   392 ;;      Temps:          0       0       0       0       0       0       0
   393 ;;      Totals:         1       0       0       0       0       0       0
   394 ;;Total ram usage:        1 bytes
   395 ;; Hardware stack levels used:    1
   396 ;; This function calls:
   397 ;;		Nothing
   398 ;; This function is called by:
   399 ;;		_uartPuts
   400 ;; This function uses a non-reentrant model
   401 ;;
   402                           
   403                           	psect	text3
   404  000730                     __ptext3:
   405                           	opt stack 0
   406  000730                     _uartWrite:
   407                           	opt stack 29
   408                           
   409                           ;incstack = 0
   410                           ;uartWrite@data stored from wreg
   411  000730  6E01               	movwf	uartWrite@data,c
   412                           
   413                           ;myUart.c: 80: TXREG = data;
   414  000732  C001  FFAD         	movff	uartWrite@data,4013	;volatile
   415  000736  0012               	return		;funcret
   416  000738                     __end_of_uartWrite:
   417                           	opt stack 0
   418                           tblptru	equ	0xFF8
   419                           tblptrh	equ	0xFF7
   420                           tblptrl	equ	0xFF6
   421                           tablat	equ	0xFF5
   422                           status	equ	0xFD8
   423                           
   424 ;; *************** function _uartBusy *****************
   425 ;; Defined at:
   426 ;;		line 116 in file "myUart.c"
   427 ;; Parameters:    Size  Location     Type
   428 ;;		None
   429 ;; Auto vars:     Size  Location     Type
   430 ;;		None
   431 ;; Return value:  Size  Location     Type
   432 ;;                  1    wreg      unsigned char 
   433 ;; Registers used:
   434 ;;		wreg
   435 ;; Tracked objects:
   436 ;;		On entry : 0/0
   437 ;;		On exit  : 0/0
   438 ;;		Unchanged: 0/0
   439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   440 ;;      Params:         0       0       0       0       0       0       0
   441 ;;      Locals:         0       0       0       0       0       0       0
   442 ;;      Temps:          0       0       0       0       0       0       0
   443 ;;      Totals:         0       0       0       0       0       0       0
   444 ;;Total ram usage:        0 bytes
   445 ;; Hardware stack levels used:    1
   446 ;; This function calls:
   447 ;;		Nothing
   448 ;; This function is called by:
   449 ;;		_uartPuts
   450 ;; This function uses a non-reentrant model
   451 ;;
   452                           
   453                           	psect	text4
   454  000724                     __ptext4:
   455                           	opt stack 0
   456  000724                     _uartBusy:
   457                           	opt stack 29
   458                           
   459                           ;myUart.c: 118: if(!TXSTAbits.TRMT)
   460                           
   461                           ;incstack = 0
   462  000724  B2AC               	btfsc	4012,1,c	;volatile
   463  000726  D002               	goto	l747
   464                           
   465                           ;myUart.c: 119: return 1;
   466  000728  0E01               	movlw	1
   467  00072A  0012               	return	
   468  00072C                     l747:
   469                           
   470                           ;myUart.c: 120: else
   471                           ;myUart.c: 121: return 0;
   472  00072C  0E00               	movlw	0
   473  00072E  0012               	return	
   474  000730                     __end_of_uartBusy:
   475                           	opt stack 0
   476                           tblptru	equ	0xFF8
   477                           tblptrh	equ	0xFF7
   478                           tblptrl	equ	0xFF6
   479                           tablat	equ	0xFF5
   480                           status	equ	0xFD8
   481                           
   482 ;; *************** function _uartOpen *****************
   483 ;; Defined at:
   484 ;;		line 55 in file "myUart.c"
   485 ;; Parameters:    Size  Location     Type
   486 ;;		None
   487 ;; Auto vars:     Size  Location     Type
   488 ;;		None
   489 ;; Return value:  Size  Location     Type
   490 ;;                  1    wreg      void 
   491 ;; Registers used:
   492 ;;		wreg, status,2, cstack
   493 ;; Tracked objects:
   494 ;;		On entry : 0/0
   495 ;;		On exit  : 0/0
   496 ;;		Unchanged: 0/0
   497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   498 ;;      Params:         0       0       0       0       0       0       0
   499 ;;      Locals:         0       0       0       0       0       0       0
   500 ;;      Temps:          0       0       0       0       0       0       0
   501 ;;      Totals:         0       0       0       0       0       0       0
   502 ;;Total ram usage:        0 bytes
   503 ;; Hardware stack levels used:    1
   504 ;; Hardware stack levels required when called:    1
   505 ;; This function calls:
   506 ;;		_uartBaudrateMode
   507 ;;		_uartBitMode
   508 ;;		_uartIntMode
   509 ;;		_uartRxMode
   510 ;;		_uartSetBaudrate
   511 ;;		_uartStart
   512 ;;		_uartSyncMode
   513 ;;		_uartSynchMode
   514 ;; This function is called by:
   515 ;;		_main
   516 ;; This function uses a non-reentrant model
   517 ;;
   518                           
   519                           	psect	text5
   520  00060C                     __ptext5:
   521                           	opt stack 0
   522  00060C                     _uartOpen:
   523                           	opt stack 29
   524                           
   525                           ;myUart.c: 58: TXSTA = 0;
   526                           
   527                           ;incstack = 0
   528  00060C  0E00               	movlw	0
   529  00060E  6EAC               	movwf	4012,c	;volatile
   530                           
   531                           ;myUart.c: 59: RCSTA = 0;
   532  000610  0E00               	movlw	0
   533  000612  6EAB               	movwf	4011,c	;volatile
   534                           
   535                           ;myUart.c: 61: uartSyncMode(0);
   536  000614  0E00               	movlw	0
   537  000616  EC77  F003         	call	_uartSyncMode
   538                           
   539                           ;myUart.c: 64: uartSynchMode(0);
   540  00061A  0E00               	movlw	0
   541  00061C  EC70  F003         	call	_uartSynchMode
   542                           
   543                           ;myUart.c: 66: uartBitMode(0);
   544  000620  0E00               	movlw	0
   545  000622  EC64  F003         	call	_uartBitMode
   546                           
   547                           ;myUart.c: 67: uartRxMode(1);
   548  000626  0E01               	movlw	1
   549  000628  EC7E  F003         	call	_uartRxMode
   550                           
   551                           ;myUart.c: 68: uartBaudrateMode(0);
   552  00062C  0E00               	movlw	0
   553  00062E  EC85  F003         	call	_uartBaudrateMode
   554                           
   555                           ;myUart.c: 69: uartIntMode(0, 1);
   556  000632  0E01               	movlw	1
   557  000634  6E01               	movwf	uartIntMode@rxMode,c
   558  000636  0E00               	movlw	0
   559  000638  EC58  F003         	call	_uartIntMode
   560                           
   561                           ;myUart.c: 70: uartSetBaudrate(17);
   562  00063C  0E11               	movlw	17
   563  00063E  EC9C  F003         	call	_uartSetBaudrate
   564                           
   565                           ;myUart.c: 71: uartStart();
   566  000642  ECA0  F003         	call	_uartStart	;wreg free
   567  000646  0012               	return		;funcret
   568  000648                     __end_of_uartOpen:
   569                           	opt stack 0
   570                           tblptru	equ	0xFF8
   571                           tblptrh	equ	0xFF7
   572                           tblptrl	equ	0xFF6
   573                           tablat	equ	0xFF5
   574                           status	equ	0xFD8
   575                           
   576 ;; *************** function _uartSynchMode *****************
   577 ;; Defined at:
   578 ;;		line 38 in file "myUart.c"
   579 ;; Parameters:    Size  Location     Type
   580 ;;  mode            1    wreg     unsigned char 
   581 ;; Auto vars:     Size  Location     Type
   582 ;;  mode            1    0[COMRAM] unsigned char 
   583 ;; Return value:  Size  Location     Type
   584 ;;                  1    wreg      void 
   585 ;; Registers used:
   586 ;;		wreg
   587 ;; Tracked objects:
   588 ;;		On entry : 0/0
   589 ;;		On exit  : 0/0
   590 ;;		Unchanged: 0/0
   591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   592 ;;      Params:         0       0       0       0       0       0       0
   593 ;;      Locals:         1       0       0       0       0       0       0
   594 ;;      Temps:          0       0       0       0       0       0       0
   595 ;;      Totals:         1       0       0       0       0       0       0
   596 ;;Total ram usage:        1 bytes
   597 ;; Hardware stack levels used:    1
   598 ;; This function calls:
   599 ;;		Nothing
   600 ;; This function is called by:
   601 ;;		_uartOpen
   602 ;; This function uses a non-reentrant model
   603 ;;
   604                           
   605                           	psect	text6
   606  0006E0                     __ptext6:
   607                           	opt stack 0
   608  0006E0                     _uartSynchMode:
   609                           	opt stack 29
   610                           
   611                           ;incstack = 0
   612                           ;uartSynchMode@mode stored from wreg
   613  0006E0  6E01               	movwf	uartSynchMode@mode,c
   614                           
   615                           ;myUart.c: 40: TXSTAbits.CSRC = mode;
   616  0006E2  B001               	btfsc	uartSynchMode@mode,0,c
   617  0006E4  D002               	bra	u85
   618  0006E6  9EAC               	bcf	4012,7,c	;volatile
   619  0006E8  D001               	bra	u86
   620  0006EA                     u85:
   621  0006EA  8EAC               	bsf	4012,7,c	;volatile
   622  0006EC                     u86:
   623  0006EC  0012               	return		;funcret
   624  0006EE                     __end_of_uartSynchMode:
   625                           	opt stack 0
   626                           tblptru	equ	0xFF8
   627                           tblptrh	equ	0xFF7
   628                           tblptrl	equ	0xFF6
   629                           tablat	equ	0xFF5
   630                           status	equ	0xFD8
   631                           
   632 ;; *************** function _uartSyncMode *****************
   633 ;; Defined at:
   634 ;;		line 27 in file "myUart.c"
   635 ;; Parameters:    Size  Location     Type
   636 ;;  mode            1    wreg     unsigned char 
   637 ;; Auto vars:     Size  Location     Type
   638 ;;  mode            1    0[COMRAM] unsigned char 
   639 ;; Return value:  Size  Location     Type
   640 ;;                  1    wreg      void 
   641 ;; Registers used:
   642 ;;		wreg
   643 ;; Tracked objects:
   644 ;;		On entry : 0/0
   645 ;;		On exit  : 0/0
   646 ;;		Unchanged: 0/0
   647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   648 ;;      Params:         0       0       0       0       0       0       0
   649 ;;      Locals:         1       0       0       0       0       0       0
   650 ;;      Temps:          0       0       0       0       0       0       0
   651 ;;      Totals:         1       0       0       0       0       0       0
   652 ;;Total ram usage:        1 bytes
   653 ;; Hardware stack levels used:    1
   654 ;; This function calls:
   655 ;;		Nothing
   656 ;; This function is called by:
   657 ;;		_uartOpen
   658 ;; This function uses a non-reentrant model
   659 ;;
   660                           
   661                           	psect	text7
   662  0006EE                     __ptext7:
   663                           	opt stack 0
   664  0006EE                     _uartSyncMode:
   665                           	opt stack 29
   666                           
   667                           ;incstack = 0
   668                           ;uartSyncMode@mode stored from wreg
   669  0006EE  6E01               	movwf	uartSyncMode@mode,c
   670                           
   671                           ;myUart.c: 29: TXSTAbits.SYNC = mode;
   672  0006F0  B001               	btfsc	uartSyncMode@mode,0,c
   673  0006F2  D002               	bra	u55
   674  0006F4  98AC               	bcf	4012,4,c	;volatile
   675  0006F6  D001               	bra	u56
   676  0006F8                     u55:
   677  0006F8  88AC               	bsf	4012,4,c	;volatile
   678  0006FA                     u56:
   679  0006FA  0012               	return		;funcret
   680  0006FC                     __end_of_uartSyncMode:
   681                           	opt stack 0
   682                           tblptru	equ	0xFF8
   683                           tblptrh	equ	0xFF7
   684                           tblptrl	equ	0xFF6
   685                           tablat	equ	0xFF5
   686                           status	equ	0xFD8
   687                           
   688 ;; *************** function _uartStart *****************
   689 ;; Defined at:
   690 ;;		line 43 in file "myUart.c"
   691 ;; Parameters:    Size  Location     Type
   692 ;;		None
   693 ;; Auto vars:     Size  Location     Type
   694 ;;		None
   695 ;; Return value:  Size  Location     Type
   696 ;;                  1    wreg      void 
   697 ;; Registers used:
   698 ;;		None
   699 ;; Tracked objects:
   700 ;;		On entry : 0/0
   701 ;;		On exit  : 0/0
   702 ;;		Unchanged: 0/0
   703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   704 ;;      Params:         0       0       0       0       0       0       0
   705 ;;      Locals:         0       0       0       0       0       0       0
   706 ;;      Temps:          0       0       0       0       0       0       0
   707 ;;      Totals:         0       0       0       0       0       0       0
   708 ;;Total ram usage:        0 bytes
   709 ;; Hardware stack levels used:    1
   710 ;; This function calls:
   711 ;;		Nothing
   712 ;; This function is called by:
   713 ;;		_uartOpen
   714 ;; This function uses a non-reentrant model
   715 ;;
   716                           
   717                           	psect	text8
   718  000740                     __ptext8:
   719                           	opt stack 0
   720  000740                     _uartStart:
   721                           	opt stack 29
   722                           
   723                           ;myUart.c: 45: TXSTAbits.TXEN = 1;
   724                           
   725                           ;incstack = 0
   726  000740  8AAC               	bsf	4012,5,c	;volatile
   727                           
   728                           ;myUart.c: 46: RCSTAbits.SPEN = 1;
   729  000742  8EAB               	bsf	4011,7,c	;volatile
   730  000744  0012               	return		;funcret
   731  000746                     __end_of_uartStart:
   732                           	opt stack 0
   733                           tblptru	equ	0xFF8
   734                           tblptrh	equ	0xFF7
   735                           tblptrl	equ	0xFF6
   736                           tablat	equ	0xFF5
   737                           status	equ	0xFD8
   738                           
   739 ;; *************** function _uartSetBaudrate *****************
   740 ;; Defined at:
   741 ;;		line 18 in file "myUart.c"
   742 ;; Parameters:    Size  Location     Type
   743 ;;  spbrg           1    wreg     unsigned char 
   744 ;; Auto vars:     Size  Location     Type
   745 ;;  spbrg           1    0[COMRAM] unsigned char 
   746 ;; Return value:  Size  Location     Type
   747 ;;                  1    wreg      void 
   748 ;; Registers used:
   749 ;;		wreg
   750 ;; Tracked objects:
   751 ;;		On entry : 0/0
   752 ;;		On exit  : 0/0
   753 ;;		Unchanged: 0/0
   754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   755 ;;      Params:         0       0       0       0       0       0       0
   756 ;;      Locals:         1       0       0       0       0       0       0
   757 ;;      Temps:          0       0       0       0       0       0       0
   758 ;;      Totals:         1       0       0       0       0       0       0
   759 ;;Total ram usage:        1 bytes
   760 ;; Hardware stack levels used:    1
   761 ;; This function calls:
   762 ;;		Nothing
   763 ;; This function is called by:
   764 ;;		_uartOpen
   765 ;; This function uses a non-reentrant model
   766 ;;
   767                           
   768                           	psect	text9
   769  000738                     __ptext9:
   770                           	opt stack 0
   771  000738                     _uartSetBaudrate:
   772                           	opt stack 29
   773                           
   774                           ;incstack = 0
   775                           ;uartSetBaudrate@spbrg stored from wreg
   776  000738  6E01               	movwf	uartSetBaudrate@spbrg,c
   777                           
   778                           ;myUart.c: 20: SPBRG = spbrg;
   779  00073A  C001  FFAF         	movff	uartSetBaudrate@spbrg,4015	;volatile
   780  00073E  0012               	return		;funcret
   781  000740                     __end_of_uartSetBaudrate:
   782                           	opt stack 0
   783                           tblptru	equ	0xFF8
   784                           tblptrh	equ	0xFF7
   785                           tblptrl	equ	0xFF6
   786                           tablat	equ	0xFF5
   787                           status	equ	0xFD8
   788                           
   789 ;; *************** function _uartRxMode *****************
   790 ;; Defined at:
   791 ;;		line 22 in file "myUart.c"
   792 ;; Parameters:    Size  Location     Type
   793 ;;  mode            1    wreg     unsigned char 
   794 ;; Auto vars:     Size  Location     Type
   795 ;;  mode            1    0[COMRAM] unsigned char 
   796 ;; Return value:  Size  Location     Type
   797 ;;                  1    wreg      void 
   798 ;; Registers used:
   799 ;;		wreg
   800 ;; Tracked objects:
   801 ;;		On entry : 0/0
   802 ;;		On exit  : 0/0
   803 ;;		Unchanged: 0/0
   804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   805 ;;      Params:         0       0       0       0       0       0       0
   806 ;;      Locals:         1       0       0       0       0       0       0
   807 ;;      Temps:          0       0       0       0       0       0       0
   808 ;;      Totals:         1       0       0       0       0       0       0
   809 ;;Total ram usage:        1 bytes
   810 ;; Hardware stack levels used:    1
   811 ;; This function calls:
   812 ;;		Nothing
   813 ;; This function is called by:
   814 ;;		_uartOpen
   815 ;; This function uses a non-reentrant model
   816 ;;
   817                           
   818                           	psect	text10
   819  0006FC                     __ptext10:
   820                           	opt stack 0
   821  0006FC                     _uartRxMode:
   822                           	opt stack 29
   823                           
   824                           ;incstack = 0
   825                           ;uartRxMode@mode stored from wreg
   826  0006FC  6E01               	movwf	uartRxMode@mode,c
   827                           
   828                           ;myUart.c: 24: RCSTAbits.CREN = mode;
   829  0006FE  B001               	btfsc	uartRxMode@mode,0,c
   830  000700  D002               	bra	u45
   831  000702  98AB               	bcf	4011,4,c	;volatile
   832  000704  D001               	bra	u46
   833  000706                     u45:
   834  000706  88AB               	bsf	4011,4,c	;volatile
   835  000708                     u46:
   836  000708  0012               	return		;funcret
   837  00070A                     __end_of_uartRxMode:
   838                           	opt stack 0
   839                           tblptru	equ	0xFF8
   840                           tblptrh	equ	0xFF7
   841                           tblptrl	equ	0xFF6
   842                           tablat	equ	0xFF5
   843                           status	equ	0xFD8
   844                           
   845 ;; *************** function _uartIntMode *****************
   846 ;; Defined at:
   847 ;;		line 7 in file "myUart.c"
   848 ;; Parameters:    Size  Location     Type
   849 ;;  txMode          1    wreg     unsigned char 
   850 ;;  rxMode          1    0[COMRAM] unsigned char 
   851 ;; Auto vars:     Size  Location     Type
   852 ;;  txMode          1    1[COMRAM] unsigned char 
   853 ;; Return value:  Size  Location     Type
   854 ;;                  1    wreg      void 
   855 ;; Registers used:
   856 ;;		wreg
   857 ;; Tracked objects:
   858 ;;		On entry : 0/0
   859 ;;		On exit  : 0/0
   860 ;;		Unchanged: 0/0
   861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   862 ;;      Params:         1       0       0       0       0       0       0
   863 ;;      Locals:         1       0       0       0       0       0       0
   864 ;;      Temps:          0       0       0       0       0       0       0
   865 ;;      Totals:         2       0       0       0       0       0       0
   866 ;;Total ram usage:        2 bytes
   867 ;; Hardware stack levels used:    1
   868 ;; This function calls:
   869 ;;		Nothing
   870 ;; This function is called by:
   871 ;;		_uartOpen
   872 ;; This function uses a non-reentrant model
   873 ;;
   874                           
   875                           	psect	text11
   876  0006B0                     __ptext11:
   877                           	opt stack 0
   878  0006B0                     _uartIntMode:
   879                           	opt stack 29
   880                           
   881                           ;incstack = 0
   882                           ;uartIntMode@txMode stored from wreg
   883  0006B0  6E02               	movwf	uartIntMode@txMode,c
   884                           
   885                           ;myUart.c: 9: PIR1bits.TXIF = txMode;
   886  0006B2  B002               	btfsc	uartIntMode@txMode,0,c
   887  0006B4  D002               	bra	u155
   888  0006B6  989E               	bcf	3998,4,c	;volatile
   889  0006B8  D001               	bra	u156
   890  0006BA                     u155:
   891  0006BA  889E               	bsf	3998,4,c	;volatile
   892  0006BC                     u156:
   893                           
   894                           ;myUart.c: 10: PIR1bits.RCIF = rxMode;
   895  0006BC  B001               	btfsc	uartIntMode@rxMode,0,c
   896  0006BE  D002               	bra	u165
   897  0006C0  9A9E               	bcf	3998,5,c	;volatile
   898  0006C2  D001               	bra	u166
   899  0006C4                     u165:
   900  0006C4  8A9E               	bsf	3998,5,c	;volatile
   901  0006C6                     u166:
   902  0006C6  0012               	return		;funcret
   903  0006C8                     __end_of_uartIntMode:
   904                           	opt stack 0
   905                           tblptru	equ	0xFF8
   906                           tblptrh	equ	0xFF7
   907                           tblptrl	equ	0xFF6
   908                           tablat	equ	0xFF5
   909                           status	equ	0xFD8
   910                           
   911 ;; *************** function _uartBitMode *****************
   912 ;; Defined at:
   913 ;;		line 32 in file "myUart.c"
   914 ;; Parameters:    Size  Location     Type
   915 ;;  mode            1    wreg     unsigned char 
   916 ;; Auto vars:     Size  Location     Type
   917 ;;  mode            1    0[COMRAM] unsigned char 
   918 ;; Return value:  Size  Location     Type
   919 ;;                  1    wreg      void 
   920 ;; Registers used:
   921 ;;		wreg
   922 ;; Tracked objects:
   923 ;;		On entry : 0/0
   924 ;;		On exit  : 0/0
   925 ;;		Unchanged: 0/0
   926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   927 ;;      Params:         0       0       0       0       0       0       0
   928 ;;      Locals:         1       0       0       0       0       0       0
   929 ;;      Temps:          0       0       0       0       0       0       0
   930 ;;      Totals:         1       0       0       0       0       0       0
   931 ;;Total ram usage:        1 bytes
   932 ;; Hardware stack levels used:    1
   933 ;; This function calls:
   934 ;;		Nothing
   935 ;; This function is called by:
   936 ;;		_uartOpen
   937 ;; This function uses a non-reentrant model
   938 ;;
   939                           
   940                           	psect	text12
   941  0006C8                     __ptext12:
   942                           	opt stack 0
   943  0006C8                     _uartBitMode:
   944                           	opt stack 29
   945                           
   946                           ;incstack = 0
   947                           ;uartBitMode@mode stored from wreg
   948  0006C8  6E01               	movwf	uartBitMode@mode,c
   949                           
   950                           ;myUart.c: 34: TXSTAbits.TX9 = mode;
   951  0006CA  B001               	btfsc	uartBitMode@mode,0,c
   952  0006CC  D002               	bra	u65
   953  0006CE  9CAC               	bcf	4012,6,c	;volatile
   954  0006D0  D001               	bra	u66
   955  0006D2                     u65:
   956  0006D2  8CAC               	bsf	4012,6,c	;volatile
   957  0006D4                     u66:
   958                           
   959                           ;myUart.c: 35: RCSTAbits.RX9 = mode;
   960  0006D4  B001               	btfsc	uartBitMode@mode,0,c
   961  0006D6  D002               	bra	u75
   962  0006D8  9CAB               	bcf	4011,6,c	;volatile
   963  0006DA  D001               	bra	u76
   964  0006DC                     u75:
   965  0006DC  8CAB               	bsf	4011,6,c	;volatile
   966  0006DE                     u76:
   967  0006DE  0012               	return		;funcret
   968  0006E0                     __end_of_uartBitMode:
   969                           	opt stack 0
   970                           tblptru	equ	0xFF8
   971                           tblptrh	equ	0xFF7
   972                           tblptrl	equ	0xFF6
   973                           tablat	equ	0xFF5
   974                           status	equ	0xFD8
   975                           
   976 ;; *************** function _uartBaudrateMode *****************
   977 ;; Defined at:
   978 ;;		line 13 in file "myUart.c"
   979 ;; Parameters:    Size  Location     Type
   980 ;;  mode            1    wreg     unsigned char 
   981 ;; Auto vars:     Size  Location     Type
   982 ;;  mode            1    0[COMRAM] unsigned char 
   983 ;; Return value:  Size  Location     Type
   984 ;;                  1    wreg      void 
   985 ;; Registers used:
   986 ;;		wreg
   987 ;; Tracked objects:
   988 ;;		On entry : 0/0
   989 ;;		On exit  : 0/0
   990 ;;		Unchanged: 0/0
   991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   992 ;;      Params:         0       0       0       0       0       0       0
   993 ;;      Locals:         1       0       0       0       0       0       0
   994 ;;      Temps:          0       0       0       0       0       0       0
   995 ;;      Totals:         1       0       0       0       0       0       0
   996 ;;Total ram usage:        1 bytes
   997 ;; Hardware stack levels used:    1
   998 ;; This function calls:
   999 ;;		Nothing
  1000 ;; This function is called by:
  1001 ;;		_uartOpen
  1002 ;; This function uses a non-reentrant model
  1003 ;;
  1004                           
  1005                           	psect	text13
  1006  00070A                     __ptext13:
  1007                           	opt stack 0
  1008  00070A                     _uartBaudrateMode:
  1009                           	opt stack 29
  1010                           
  1011                           ;incstack = 0
  1012                           ;uartBaudrateMode@mode stored from wreg
  1013  00070A  6E01               	movwf	uartBaudrateMode@mode,c
  1014                           
  1015                           ;myUart.c: 15: TXSTAbits.BRGH = mode;
  1016  00070C  B001               	btfsc	uartBaudrateMode@mode,0,c
  1017  00070E  D002               	bra	u35
  1018  000710  94AC               	bcf	4012,2,c	;volatile
  1019  000712  D001               	bra	u36
  1020  000714                     u35:
  1021  000714  84AC               	bsf	4012,2,c	;volatile
  1022  000716                     u36:
  1023  000716  0012               	return		;funcret
  1024  000718                     __end_of_uartBaudrateMode:
  1025                           	opt stack 0
  1026                           tblptru	equ	0xFF8
  1027                           tblptrh	equ	0xFF7
  1028                           tblptrl	equ	0xFF6
  1029                           tablat	equ	0xFF5
  1030                           status	equ	0xFD8
  1031                           tblptru	equ	0xFF8
  1032                           tblptrh	equ	0xFF7
  1033                           tblptrl	equ	0xFF6
  1034                           tablat	equ	0xFF5
  1035                           status	equ	0xFD8
  1036                           
  1037                           	psect	rparam
  1038  0000                     tblptru	equ	0xFF8
  1039                           tblptrh	equ	0xFF7
  1040                           tblptrl	equ	0xFF6
  1041                           tablat	equ	0xFF5
  1042                           status	equ	0xFD8


Data Sizes:
    Strings     9
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127      3       4
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    uartPuts@str	PTR unsigned char  size(2) Largest target is 9
		 -> STR_1(CODE[9]), 


Critical Paths under _main in COMRAM

    _main->_uartPuts
    _uartPuts->_uartWrite
    _uartOpen->_uartIntMode

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     336
                           _uartOpen
                           _uartPuts
                           _uartRead
 ---------------------------------------------------------------------------------
 (1) _uartRead                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _uartPuts                                             2     0      2     123
                                              1 COMRAM     2     0      2
                           _uartBusy
                          _uartWrite
 ---------------------------------------------------------------------------------
 (2) _uartWrite                                            1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _uartBusy                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _uartOpen                                             0     0      0     213
                   _uartBaudrateMode
                        _uartBitMode
                        _uartIntMode
                         _uartRxMode
                    _uartSetBaudrate
                          _uartStart
                       _uartSyncMode
                      _uartSynchMode
 ---------------------------------------------------------------------------------
 (2) _uartSynchMode                                        1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _uartSyncMode                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _uartStart                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _uartSetBaudrate                                      1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _uartRxMode                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _uartIntMode                                          2     1      1     108
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _uartBitMode                                          1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _uartBaudrateMode                                     1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _uartOpen
     _uartBaudrateMode
     _uartBitMode
     _uartIntMode
     _uartRxMode
     _uartSetBaudrate
     _uartStart
     _uartSyncMode
     _uartSynchMode
   _uartPuts
     _uartBusy
     _uartWrite
   _uartRead

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F      3       4       1        3.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       4      15        0.0%
DATA                 0      0       4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.40 build -251452761 
Symbol Table                                                                                   Thu Feb 23 10:18:46 2017

                       l19 066A                         u35 0714                         u36 0716  
                       u45 0706                         u46 0708                         u55 06F8  
                       u56 06FA                         u65 06D2                         u66 06D4  
                       u75 06DC                         u76 06DE                         u85 06EA  
                       u86 06EC                __CFG_BORV$3 000000                __CFG_OSC$HS 000000  
              __CFG_LVP$ON 000000                        l747 072C                        l851 0664  
                      l837 067E                        l855 066E                        l849 065C  
                      u155 06BA                        u156 06BC                        u165 06C4  
                      u166 06C6            _uartSetBaudrate 0738               __CFG_WDT$OFF 000000  
                     STR_1 0601                       _LATD 000F8C                       _main 0648  
                     start 0000              __CFG_IESO$OFF 000000           uartSyncMode@mode 0001  
            __CFG_MCLRE$ON 000000               ___param_bank 000000                      ?_main 0001  
        uartIntMode@rxMode 0001          uartIntMode@txMode 0002                      _RCREG 000FAE  
                    _RCSTA 000FAB                      _SPBRG 000FAF                      _TRISD 000F95  
                    _TXREG 000FAD                      _TXSTA 000FAC              __CFG_PWRT$OFF 000000  
           __CFG_FCMEN$OFF 000000          ?_uartBaudrateMode 0001             __CFG_BOREN$OFF 000000  
                    tablat 000FF5         ??_uartBaudrateMode 0001                      status 000FD8  
     uartSetBaudrate@spbrg 0001            __initialization 0718               __end_of_main 067E  
                   ??_main 0004              __activetblptr 000002    __end_of_uartSetBaudrate 0740  
             ?_uartBitMode 0001             __CFG_XINST$OFF 000000               ?_uartIntMode 0001  
           __CFG_STVREN$ON 000000           __end_of_uartBusy 0730           __end_of_uartRead 074A  
         __end_of_uartOpen 0648           __end_of_uartPuts 06B0               __mediumconst 0000  
                   tblptrh 000FF7                     tblptrl 000FF6                     tblptru 000FF8  
        uartSynchMode@mode 0001                 __accesstop 0080    __end_of__initialization 071A  
          __CFG_PBADEN$OFF 000000              ___rparam_used 000001             __pcstackCOMRAM 0001  
         ?_uartSetBaudrate 0001      __end_of_uartSynchMode 06EE         __size_of_uartStart 0006  
       __size_of_uartWrite 0008                    __Hparam 0000                    __Lparam 0000  
                ?_uartBusy 0001                  ?_uartRead 0001                  ?_uartOpen 0001  
     __size_of_uartBitMode 0018                  ?_uartPuts 0002  __size_of_uartBaudrateMode 000E  
     __size_of_uartIntMode 0018               __psmallconst 0600                    __pcinit 0718  
                  __ramtop 0600                    __ptext0 0648                    __ptext1 0746  
                  __ptext2 067E                    __ptext3 0730                    __ptext4 0724  
                  __ptext5 060C                    __ptext6 06E0                    __ptext7 06EE  
                  __ptext8 0740                    __ptext9 0738                    _uartCmd 0004  
            ?_uartSyncMode 0001       end_of_initialization 071A              __Lmediumconst 0000  
        __end_of_uartStart 0746          __end_of_uartWrite 0738                 ??_uartBusy 0001  
               ??_uartRead 0001                uartPuts@str 0002                 ??_uartOpen 0003  
               ??_uartPuts 0004                  _RCSTAbits 000FAB                 _uartRxMode 06FC  
           ??_uartSyncMode 0001                  _TXSTAbits 000FAC        start_initialization 0718  
              ?_uartRxMode 0001           _uartBaudrateMode 070A           __CFG_LPT1OSC$OFF 000000  
              __pbssCOMRAM 0004             uartRxMode@mode 0001   __size_of_uartSetBaudrate 0008  
        __CFG_CCP2MX$PORTC 000000       __end_of_uartSyncMode 06FC          __size_of_uartBusy 000C  
        __size_of_uartRead 0004          __size_of_uartOpen 003C          __size_of_uartPuts 0032  
              __smallconst 0600            uartBitMode@mode 0001        __size_of_uartRxMode 000E  
   __size_of_uartSynchMode 000E              ??_uartBitMode 0001                   _PIR1bits 000F9E  
            ??_uartIntMode 0002           __CFG_WDTPS$32768 000000                  _uartStart 0740  
                _uartWrite 0730                   __Hrparam 0000          ??_uartSetBaudrate 0001  
                 __Lrparam 0000                 ?_uartStart 0001                 ?_uartWrite 0001  
      __end_of_uartBitMode 06E0              _uartSynchMode 06E0        __end_of_uartIntMode 06C8  
                 __ptext10 06FC                   __ptext11 06B0                   __ptext12 06C8  
                 __ptext13 070A   __end_of_uartBaudrateMode 0718              __size_of_main 0036  
    __size_of_uartSyncMode 000E                   _uartBusy 0724                   _uartRead 0746  
                 _uartOpen 060C                   _uartPuts 067E               ??_uartRxMode 0001  
           ?_uartSynchMode 0001              uartWrite@data 0001               _uartSyncMode 06EE  
       __end_of_uartRxMode 070A                _uartBitMode 06C8                _uartIntMode 06B0  
              ??_uartStart 0001                ??_uartWrite 0001       uartBaudrateMode@mode 0001  
          ??_uartSynchMode 0001  
